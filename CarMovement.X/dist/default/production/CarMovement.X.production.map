Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\CarMovement.X.production.sym \
  --cmf=dist/default/production\CarMovement.X.production.cmf -z -Q18F46K20 \
  -oC:\Users\BLURYF~1\AppData\Local\Temp\s8ggx2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/CarMovement.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=060h-0F5Fh -pstack=STACK \
  -ACODE=00h-0FFFFh -ACONST=00h-0FFFFh -ASMALLCONST=01000h-010FFhx240 \
  -AMEDIUMCONST=01000h-0FFFFh -ACOMRAM=01h-05Fh -AABS1=00h-0F5Fh \
  -ABIGRAM=01h-0F5Fh -ARAM=060h-0FFh,0100h-01FFhx14,0F00h-0F5Fh \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ABANK8=0800h-08FFh \
  -ABANK9=0900h-09FFh -ABANK10=0A00h-0AFFh -ABANK11=0B00h-0BFFh \
  -ABANK12=0C00h-0CFFh -ABANK13=0D00h-0DFFh -ABANK14=0E00h-0EFFh \
  -ABANK15=0F00h-0F5Fh -ASFR=0F60h-0FFFh -ACONFIG=0300000h-030000Dh \
  -AIDLOC=0200000h-0200007h -AEEDATA=0F00000h-0F003FFh -peeprom_data=EEDATA \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=01000h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\BLURYF~1\AppData\Local\Temp\s8ggx8.o \
  dist/default/production\CarMovement.X.production.o 

Object code version is 3.11

Machine type is 18F46K20



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\BLURYF~1\AppData\Local\Temp\s8ggx8.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                init                                  0        0        4        0       0
dist/default/production\CarMovement.X.production.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                text17                             FD04     FD04       DE     7E82       0
                text16                             FAD0     FAD0       80     7D68       0
                text15                             FB50     FB50       80     7DA8       0
                text14                             F8DE     F8DE       34     7C6F       0
                text13                             F83A     F83A       1A     7C1D       0
                text12                             FDE2     FDE2       DE     7EF1       0
                text11                             F9E4     F9E4       76     7CF2       0
                text10                             FA5A     FA5A       76     7D2D       0
                text9                              FC68     FC68       9C     7E34       0
                text8                              F912     F912       34     7C89       0
                text7                              F854     F854       1A     7C2A       0
                text6                              FBD0     FBD0       98     7DE8       0
                text5                              F946     F946       34     7CA3       0
                text4                              F97A     F97A       34     7CBD       0
                text3                              F86E     F86E       1A     7C37       0
                text2                              F888     F888       1A     7C44       0
                text1                              F8A2     F8A2       1A     7C51       0
                text0                              FEC0     FEC0      140     7F60       0
                cstackCOMRAM                         23       23       12        1       1
                dataCOMRAM                            1        1       22        1       1
                bssCOMRAM                            35       35        C        1       1
                cinit                              F9AE     F9AE       36     7CD7       0
                idataCOMRAM                        F8BC     F8BC       22     F8BC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text17                             FD04     FD04       DE         0
                text16                             FAD0     FAD0       80         0
                text15                             FB50     FB50       80         0
                text14                             F8DE     F8DE       34         0
                text13                             F83A     F83A       1A         0
                text12                             FDE2     FDE2       DE         0
                text11                             F9E4     F9E4       76         0
                text10                             FA5A     FA5A       76         0
                text9                              FC68     FC68       9C         0
                text8                              F912     F912       34         0
                text7                              F854     F854       1A         0
                text6                              FBD0     FBD0       98         0
                text5                              F946     F946       34         0
                text4                              F97A     F97A       34         0
                text3                              F86E     F86E       1A         0
                text2                              F888     F888       1A         0
                text1                              F8A2     F8A2       1A         0
                text0                              FEC0     FEC0      140         0
                cinit                              F9AE     F9AE       36         0
                idataCOMRAM                        F8BC     F8BC       22         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         23       23       12         1
                dataCOMRAM                            1        1       22         1
                bssCOMRAM                            35       35        C         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   BANK8          

        CLASS   BANK9          

        CLASS   BANK10         

        CLASS   BANK11         

        CLASS   BANK12         

        CLASS   BANK13         

        CLASS   BANK14         

        CLASS   BANK15         

        CLASS   SFR            

        CLASS   CONFIG         
                config                           300000   300000        E         4

        CLASS   IDLOC          
                idloc                            200000   200000        8         5

        CLASS   EEDATA         

        CLASS   FARRAM         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                dataCOMRAM                     000001  000040  000041         1       1  COMRAM  
                text13                         00F83A  00001A  00F854      7C1D       0  CODE    
                text7                          00F854  00001A  00F86E      7C2A       0  CODE    
                text3                          00F86E  00001A  00F888      7C37       0  CODE    
                text2                          00F888  00001A  00F8A2      7C44       0  CODE    
                text1                          00F8A2  00001A  00F8BC      7C51       0  CODE    
                idataCOMRAM                    00F8BC  000022  00F8DE      F8BC       0  CODE    
                text14                         00F8DE  000034  00F912      7C6F       0  CODE    
                text8                          00F912  000034  00F946      7C89       0  CODE    
                text5                          00F946  000034  00F97A      7CA3       0  CODE    
                text4                          00F97A  000034  00F9AE      7CBD       0  CODE    
                cinit                          00F9AE  000036  00F9E4      7CD7       0  CODE    
                text11                         00F9E4  000076  00FA5A      7CF2       0  CODE    
                text10                         00FA5A  000076  00FAD0      7D2D       0  CODE    
                text16                         00FAD0  000080  00FB50      7D68       0  CODE    
                text15                         00FB50  000080  00FBD0      7DA8       0  CODE    
                text6                          00FBD0  000098  00FC68      7DE8       0  CODE    
                text9                          00FC68  00009C  00FD04      7E34       0  CODE    
                text17                         00FD04  0000DE  00FDE2      7E82       0  CODE    
                text12                         00FDE2  0000DE  00FEC0      7EF1       0  CODE    
                text0                          00FEC0  000140  010000      7F60       0  CODE    


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK10           000A00-000AFF              100
        BANK11           000B00-000BFF              100
        BANK12           000C00-000CFF              100
        BANK13           000D00-000DFF              100
        BANK14           000E00-000EFF              100
        BANK15           000F00-000F5F               60
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BANK8            000800-0008FF              100
        BANK9            000900-0009FF              100
        BIGRAM           000041-000F5F              F1F
        CODE             000004-00F839             F836
        COMRAM           000041-00005F               1F
        CONST            000004-00F839             F836
        EEDATA           F00000-F003FF              400
        MEDIUMCONST      001000-00F839             E83A
        RAM              000060-000F5F              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001000-00F839              100
        STACK            000060-000F5F              F00

                                  Symbol Table

_LATA                                  (abs)        000F89
_LATB                                  (abs)        000F8A
_LATC                                  (abs)        000F8B
_LATD                                  (abs)        000F8C
_LATE                                  (abs)        000F8D
_PORTA                                 (abs)        000F80
_PORTB                                 (abs)        000F81
_PORTC                                 (abs)        000F82
_PORTD                                 (abs)        000F83
_PORTE                                 (abs)        000F84
_TRISA                                 (abs)        000F92
_TRISB                                 (abs)        000F93
_TRISC                                 (abs)        000F94
_TRISD                                 (abs)        000F95
_TRISE                                 (abs)        000F96
__HRAM                                 (abs)        000000
__Habs1                                abs1         000000
__Hbank0                               bank0        000000
__Hbank1                               bank1        000000
__Hbank10                              bank10       000000
__Hbank11                              bank11       000000
__Hbank12                              bank12       000000
__Hbank13                              bank13       000000
__Hbank14                              bank14       000000
__Hbank15                              bank15       000000
__Hbank2                               bank2        000000
__Hbank3                               bank3        000000
__Hbank4                               bank4        000000
__Hbank5                               bank5        000000
__Hbank6                               bank6        000000
__Hbank7                               bank7        000000
__Hbank8                               bank8        000000
__Hbank9                               bank9        000000
__Hbigbss                              bigbss       000000
__Hbigdata                             bigdata      000000
__Hbigram                              bigram       000000
__Hbss                                 bss          000000
__HbssCOMRAM                           bssCOMRAM    000000
__Hcinit                               cinit        000000
__Hclrtext                             clrtext      000000
__Hcomram                              comram       000000
__Hconfig                              config       30000E
__Hconst                               const        000000
__HcstackCOMRAM                        cstackCOMRAM 000000
__Hdata                                data         000000
__HdataCOMRAM                          dataCOMRAM   000000
__Heeprom_data                         eeprom_data  000000
__Hfarbss                              farbss       000000
__Hfardata                             fardata      000000
__Hibigdata                            ibigdata     000000
__Hidata                               idata        000000
__HidataCOMRAM                         idataCOMRAM  000000
__Hidloc                               idloc        200008
__Hifardata                            ifardata     000000
__Hinit                                init         000004
__Hintcode                             intcode      000000
__Hintcode_body                        intcode_body 000000
__Hintcodelo                           intcodelo    000000
__Hintentry                            intentry     000000
__Hintret                              intret       000000
__Hintsave_regs                        intsave_regs 000000
__Hirdata                              irdata       000000
__Hmediumconst                         mediumconst  000000
__HnvFARRAM                            nvFARRAM     000000
__Hnvbit                               nvbit        000000
__Hnvrram                              nvrram       000000
__Hparam                               rparam       000000
__Hpowerup                             powerup      000000
__Hram                                 ram          000000
__Hramtop                              ramtop       001000
__Hrbit                                rbit         000000
__Hrbss                                rbss         000000
__Hrdata                               rdata        000000
__Hreset_vec                           reset_vec    000000
__Hrparam                              rparam       000000
__Hsfr                                 sfr          000000
__Hsmallconst                          smallconst   000000
__Hspace_0                             (abs)        010000
__Hspace_1                             (abs)        000041
__Hspace_2                             (abs)        000000
__Hspace_4                             (abs)        60000E
__Hstack                               stack        000000
__Hstruct                              struct       000000
__Htemp                                temp         000000
__Htext                                text         000000
__Htext0                               text0        000000
__Htext1                               text1        000000
__Htext10                              text10       000000
__Htext11                              text11       000000
__Htext12                              text12       000000
__Htext13                              text13       000000
__Htext14                              text14       000000
__Htext15                              text15       000000
__Htext16                              text16       000000
__Htext17                              text17       000000
__Htext2                               text2        000000
__Htext3                               text3        000000
__Htext4                               text4        000000
__Htext5                               text5        000000
__Htext6                               text6        000000
__Htext7                               text7        000000
__Htext8                               text8        000000
__Htext9                               text9        000000
__LRAM                                 (abs)        000001
__Labs1                                abs1         000000
__Lbank0                               bank0        000000
__Lbank1                               bank1        000000
__Lbank10                              bank10       000000
__Lbank11                              bank11       000000
__Lbank12                              bank12       000000
__Lbank13                              bank13       000000
__Lbank14                              bank14       000000
__Lbank15                              bank15       000000
__Lbank2                               bank2        000000
__Lbank3                               bank3        000000
__Lbank4                               bank4        000000
__Lbank5                               bank5        000000
__Lbank6                               bank6        000000
__Lbank7                               bank7        000000
__Lbank8                               bank8        000000
__Lbank9                               bank9        000000
__Lbigbss                              bigbss       000000
__Lbigdata                             bigdata      000000
__Lbigram                              bigram       000000
__Lbss                                 bss          000000
__LbssCOMRAM                           bssCOMRAM    000000
__Lcinit                               cinit        000000
__Lclrtext                             clrtext      000000
__Lcomram                              comram       000000
__Lconfig                              config       000000
__Lconst                               const        000000
__LcstackCOMRAM                        cstackCOMRAM 000000
__Ldata                                data         000000
__LdataCOMRAM                          dataCOMRAM   000000
__Leeprom_data                         eeprom_data  000000
__Lfarbss                              farbss       000000
__Lfardata                             fardata      000000
__Libigdata                            ibigdata     000000
__Lidata                               idata        000000
__LidataCOMRAM                         idataCOMRAM  000000
__Lidloc                               idloc        000000
__Lifardata                            ifardata     000000
__Linit                                init         000000
__Lintcode                             intcode      000000
__Lintcode_body                        intcode_body 000000
__Lintcodelo                           intcodelo    000000
__Lintentry                            intentry     000000
__Lintret                              intret       000000
__Lintsave_regs                        intsave_regs 000000
__Lirdata                              irdata       000000
__Lmediumconst                         mediumconst  000000
__LnvFARRAM                            nvFARRAM     000000
__Lnvbit                               nvbit        000000
__Lnvrram                              nvrram       000000
__Lparam                               rparam       000000
__Lpowerup                             powerup      000000
__Lram                                 ram          000000
__Lramtop                              ramtop       001000
__Lrbit                                rbit         000000
__Lrbss                                rbss         000000
__Lrdata                               rdata        000000
__Lreset_vec                           reset_vec    000000
__Lrparam                              rparam       000000
__Lsfr                                 sfr          000000
__Lsmallconst                          smallconst   000000
__Lspace_0                             (abs)        000000
__Lspace_1                             (abs)        000000
__Lspace_2                             (abs)        000000
__Lspace_4                             (abs)        000000
__Lstack                               stack        000000
__Lstruct                              struct       000000
__Ltemp                                temp         000000
__Ltext                                text         000000
__Ltext0                               text0        000000
__Ltext1                               text1        000000
__Ltext10                              text10       000000
__Ltext11                              text11       000000
__Ltext12                              text12       000000
__Ltext13                              text13       000000
__Ltext14                              text14       000000
__Ltext15                              text15       000000
__Ltext16                              text16       000000
__Ltext17                              text17       000000
__Ltext2                               text2        000000
__Ltext3                               text3        000000
__Ltext4                               text4        000000
__Ltext5                               text5        000000
__Ltext6                               text6        000000
__Ltext7                               text7        000000
__Ltext8                               text8        000000
__Ltext9                               text9        000000
__S0                                   (abs)        010000
__S1                                   (abs)        000041
__S2                                   (abs)        000000
__S4                                   (abs)        000000
__S5                                   (abs)        000000
___inthi_sp                            stack        000000
___intlo_sp                            stack        000000
___param_bank                          (abs)        000000
___rparam_used                         (abs)        000001
___sp                                  stack        000000
__accesstop                            (abs)        000060
__activetblptr                         (abs)        000002
__end_of__initialization               cinit        00F9DA
__end_of_backward                      text13       00F854
__end_of_btn_config                    text11       00FA5A
__end_of_btn_read_value                text9        00FD04
__end_of_forward                       text7        00F86E
__end_of_gpio_pin_direction_intialize  text12       00FEC0
__end_of_gpio_pin_read_value           text10       00FAD0
__end_of_gpio_pin_write_value          text17       00FDE2
__end_of_main                          text0        010000
__end_of_motor_initialize              text5        00F97A
__end_of_motor_reverse                 text14       00F912
__end_of_motor_stop                    text4        00F9AE
__end_of_motor_turn_on                 text8        00F946
__end_of_relay_initialize              text6        00FC68
__end_of_relay_turn_off                text16       00FB50
__end_of_relay_turn_on                 text15       00FBD0
__end_of_stop                          text3        00F888
__end_of_twist_left                    text2        00F8A2
__end_of_twist_right                   text1        00F8BC
__initialization                       cinit        00F9AE
__mediumconst                          mediumconst  000000
__pbssCOMRAM                           bssCOMRAM    000035
__pcinit                               cinit        00F9AE
__pcstackCOMRAM                        cstackCOMRAM 000023
__pdataCOMRAM                          dataCOMRAM   000001
__pidataCOMRAM                         idataCOMRAM  00F8BC
__ptext0                               text0        00FEC0
__ptext1                               text1        00F8A2
__ptext10                              text10       00FA5A
__ptext11                              text11       00F9E4
__ptext12                              text12       00FDE2
__ptext13                              text13       00F83A
__ptext14                              text14       00F8DE
__ptext15                              text15       00FB50
__ptext16                              text16       00FAD0
__ptext17                              text17       00FD04
__ptext2                               text2        00F888
__ptext3                               text3        00F86E
__ptext4                               text4        00F97A
__ptext5                               text5        00F946
__ptext6                               text6        00FBD0
__ptext7                               text7        00F854
__ptext8                               text8        00F912
__ptext9                               text9        00FC68
__ramtop                               ramtop       001000
__size_of_backward                     (abs)        000000
__size_of_btn_config                   (abs)        000000
__size_of_btn_read_value               (abs)        000000
__size_of_forward                      (abs)        000000
__size_of_gpio_pin_direction_intialize (abs)        000000
__size_of_gpio_pin_read_value          (abs)        000000
__size_of_gpio_pin_write_value         (abs)        000000
__size_of_main                         (abs)        000000
__size_of_motor_initialize             (abs)        000000
__size_of_motor_reverse                (abs)        000000
__size_of_motor_stop                   (abs)        000000
__size_of_motor_turn_on                (abs)        000000
__size_of_relay_initialize             (abs)        000000
__size_of_relay_turn_off               (abs)        000000
__size_of_relay_turn_on                (abs)        000000
__size_of_stop                         (abs)        000000
__size_of_twist_left                   (abs)        000000
__size_of_twist_right                  (abs)        000000
__smallconst                           smallconst   000000
_b_status                              bssCOMRAM    000039
_backward                              text13       00F83A
_btn_backward                          dataCOMRAM   000021
_btn_config                            text11       00F9E4
_btn_forward                           dataCOMRAM   000022
_btn_left                              dataCOMRAM   00001F
_btn_read_value                        text9        00FC68
_btn_right                             dataCOMRAM   000020
_f_status                              bssCOMRAM    00003B
_forward                               text7        00F854
_gpio_pin_direction_intialize          text12       00FDE2
_gpio_pin_read_value                   text10       00FA5A
_gpio_pin_write_value                  text17       00FD04
_l_status                              bssCOMRAM    000035
_lat_register                          dataCOMRAM   00000B
_main                                  text0        00FEC0
_motor1                                bssCOMRAM    00003F
_motor2                                bssCOMRAM    00003D
_motor_initialize                      text5        00F946
_motor_reverse                         text14       00F8DE
_motor_stop                            text4        00F97A
_motor_turn_on                         text8        00F912
_port_register                         dataCOMRAM   000001
_r_status                              bssCOMRAM    000037
_relay_initialize                      text6        00FBD0
_relay_turn_off                        text16       00FAD0
_relay_turn_on                         text15       00FB50
_stop                                  text3        00F86E
_tris_register                         dataCOMRAM   000015
_twist_left                            text2        00F888
_twist_right                           text1        00F8A2
btn_config@button                      cstackCOMRAM 00002E
btn_read_value@button                  cstackCOMRAM 00002D
btn_read_value@status                  cstackCOMRAM 00002F
end_of_initialization                  cinit        00F9DA
gpio_pin_direction_intialize@direction cstackCOMRAM 000024
gpio_pin_direction_intialize@pin       cstackCOMRAM 000023
gpio_pin_direction_intialize@port      cstackCOMRAM 00002D
gpio_pin_read_value@logic              cstackCOMRAM 000024
gpio_pin_read_value@pin                cstackCOMRAM 000023
gpio_pin_read_value@port               cstackCOMRAM 00002C
gpio_pin_write_value@pin               cstackCOMRAM 000023
gpio_pin_write_value@pin_value         cstackCOMRAM 000024
gpio_pin_write_value@port              cstackCOMRAM 00002D
intlevel0                              text         000000
intlevel1                              text         000000
intlevel2                              text         000000
intlevel3                              text         000000
motor_initialize@motor                 cstackCOMRAM 000032
motor_reverse@motor                    cstackCOMRAM 000032
motor_stop@motor                       cstackCOMRAM 000032
motor_turn_on@motor                    cstackCOMRAM 000032
relay_initialize@relay                 cstackCOMRAM 00002E
relay_turn_off@relay                   cstackCOMRAM 00002E
relay_turn_on@relay                    cstackCOMRAM 00002E
stackhi                                (abs)        000F5F
stacklo                                (abs)        000060
start                                  init         000000
start_initialization                   cinit        00F9AE


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 27 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   46[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_backward
		_btn_config
		_btn_read_value
		_forward
		_motor_initialize
		_stop
		_twist_left
		_twist_right
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _twist_right *****************
 Defined at:
		line 99 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_reverse
		_motor_turn_on
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _twist_left *****************
 Defined at:
		line 104 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_reverse
		_motor_turn_on
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 94 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_stop *****************
 Defined at:
		line 36 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  motor           2   15[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
 This function is called by:
		_stop
 This function uses a non-reentrant model


 *************** function _motor_initialize *****************
 Defined at:
		line 11 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  motor           2   15[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_initialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _relay_initialize *****************
 Defined at:
		line 11 in file "relay.c"
 Parameters:    Size  Location     Type
  relay           2   11[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_direction_intialize
		_gpio_pin_write_value
 This function is called by:
		_motor_initialize
 This function uses a non-reentrant model


 *************** function _forward *****************
 Defined at:
		line 84 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_turn_on
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_turn_on *****************
 Defined at:
		line 24 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  motor           2   15[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
		_relay_turn_on
 This function is called by:
		_forward
		_twist_right
		_twist_left
 This function uses a non-reentrant model


 *************** function _btn_read_value *****************
 Defined at:
		line 24 in file "button.c"
 Parameters:    Size  Location     Type
  button          2   10[COMRAM] PTR struct .
		 -> btn_left(1), btn_right(1), btn_backward(1), btn_forward(1), 
  status          2   12[COMRAM] PTR enum E2727
		 -> l_status(2), r_status(2), b_status(2), f_status(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_read_value
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _gpio_pin_read_value *****************
 Defined at:
		line 54 in file "mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2703
  pin             1    0[COMRAM] enum E2693
  logic           2    1[COMRAM] PTR enum E2685
		 -> l_status(2), r_status(2), b_status(2), f_status(2), 
 Auto vars:     Size  Location     Type
  port            1    9[COMRAM] enum E2703
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_btn_read_value
 This function uses a non-reentrant model


 *************** function _btn_config *****************
 Defined at:
		line 11 in file "button.c"
 Parameters:    Size  Location     Type
  button          2   11[COMRAM] PTR struct .
		 -> btn_left(1), btn_right(1), btn_backward(1), btn_forward(1), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_direction_intialize
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _gpio_pin_direction_intialize *****************
 Defined at:
		line 18 in file "mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2703
  pin             1    0[COMRAM] enum E2693
  direction       1    1[COMRAM] enum E2689
 Auto vars:     Size  Location     Type
  port            1   10[COMRAM] enum E2703
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_btn_config
		_relay_initialize
 This function uses a non-reentrant model


 *************** function _backward *****************
 Defined at:
		line 89 in file "Application.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_motor_reverse
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motor_reverse *****************
 Defined at:
		line 48 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  motor           2   15[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2999
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_relay_turn_off
		_relay_turn_on
 This function is called by:
		_backward
		_twist_right
		_twist_left
 This function uses a non-reentrant model


 *************** function _relay_turn_on *****************
 Defined at:
		line 24 in file "relay.c"
 Parameters:    Size  Location     Type
  relay           2   11[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_write_value
 This function is called by:
		_motor_turn_on
		_motor_reverse
 This function uses a non-reentrant model


 *************** function _relay_turn_off *****************
 Defined at:
		line 36 in file "relay.c"
 Parameters:    Size  Location     Type
  relay           2   11[COMRAM] PTR struct .
		 -> motor2(2), motor1(2), 
 Auto vars:     Size  Location     Type
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_gpio_pin_write_value
 This function is called by:
		_motor_turn_on
		_motor_stop
		_motor_reverse
 This function uses a non-reentrant model


 *************** function _gpio_pin_write_value *****************
 Defined at:
		line 36 in file "mcal_gpio.c"
 Parameters:    Size  Location     Type
  port            1    wreg     enum E2703
  pin             1    0[COMRAM] enum E2693
  pin_value       1    1[COMRAM] enum E2685
 Auto vars:     Size  Location     Type
  port            1   10[COMRAM] enum E2703
  ret             1    0        enum E2681
 Return value:  Size  Location     Type
                  1    wreg      enum E2681
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
      Params:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_relay_initialize
		_relay_turn_on
		_relay_turn_off
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
button.c
		_btn_config    		CODE           	F9E4	0000	118
		_btn_read_value		CODE           	FC68	0000	156

button.c estimated size: 274

relay.c
		_relay_turn_off		CODE           	FAD0	0000	128
		_relay_initialize		CODE           	FBD0	0000	152
		_relay_turn_on 		CODE           	FB50	0000	128

relay.c estimated size: 408

dc_motor.c
		_motor_reverse 		CODE           	F8DE	0000	52
		_motor_turn_on 		CODE           	F912	0000	52
		_motor_stop    		CODE           	F97A	0000	52
		_motor_initialize		CODE           	F946	0000	52

dc_motor.c estimated size: 208

mcal_gpio.c
		_gpio_pin_write_value		CODE           	FD04	0000	222
		_gpio_pin_direction_intialize		CODE           	FDE2	0000	222
		_gpio_pin_read_value		CODE           	FA5A	0000	118

mcal_gpio.c estimated size: 562

Application.c
		_stop          		CODE           	F86E	0000	26
		_twist_left    		CODE           	F888	0000	26
		_main          		CODE           	FEC0	0000	320
		_twist_right   		CODE           	F8A2	0000	26
		_forward       		CODE           	F854	0000	26
		_backward      		CODE           	F83A	0000	26

Application.c estimated size: 450

shared
		__initialization		CODE           	F9AE	0000	44

shared estimated size: 44

