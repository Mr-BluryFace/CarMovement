

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Nov 04 15:57:13 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 05/05/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K20 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  00F8BC                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _port_register
    73  00F8BC  80                 	db	128
    74  00F8BD  0F                 	db	15
    75  00F8BE  81                 	db	129
    76  00F8BF  0F                 	db	15
    77  00F8C0  82                 	db	130
    78  00F8C1  0F                 	db	15
    79  00F8C2  83                 	db	131
    80  00F8C3  0F                 	db	15
    81  00F8C4  84                 	db	132
    82  00F8C5  0F                 	db	15
    83                           
    84                           ;initializer for _lat_register
    85  00F8C6  89                 	db	137
    86  00F8C7  0F                 	db	15
    87  00F8C8  8A                 	db	138
    88  00F8C9  0F                 	db	15
    89  00F8CA  8B                 	db	139
    90  00F8CB  0F                 	db	15
    91  00F8CC  8C                 	db	140
    92  00F8CD  0F                 	db	15
    93  00F8CE  8D                 	db	141
    94  00F8CF  0F                 	db	15
    95                           
    96                           ;initializer for _tris_register
    97  00F8D0  92                 	db	146
    98  00F8D1  0F                 	db	15
    99  00F8D2  93                 	db	147
   100  00F8D3  0F                 	db	15
   101  00F8D4  94                 	db	148
   102  00F8D5  0F                 	db	15
   103  00F8D6  95                 	db	149
   104  00F8D7  0F                 	db	15
   105  00F8D8  96                 	db	150
   106  00F8D9  0F                 	db	15
   107                           
   108                           ;initializer for _btn_left
   109  00F8DA  72                 	db	114
   110                           
   111                           ;initializer for _btn_right
   112  00F8DB  62                 	db	98
   113                           
   114                           ;initializer for _btn_backward
   115  00F8DC  52                 	db	82
   116                           
   117                           ;initializer for _btn_forward
   118  00F8DD  42                 	db	66
   119  0000                     _PORTE	set	3972
   120  0000                     _PORTD	set	3971
   121  0000                     _PORTC	set	3970
   122  0000                     _PORTB	set	3969
   123  0000                     _PORTA	set	3968
   124  0000                     _LATE	set	3981
   125  0000                     _LATD	set	3980
   126  0000                     _LATC	set	3979
   127  0000                     _LATB	set	3978
   128  0000                     _LATA	set	3977
   129  0000                     _TRISE	set	3990
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134                           
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138  00F9AE                     __pcinit:
   139                           	callstack 0
   140  00F9AE                     start_initialization:
   141                           	callstack 0
   142  00F9AE                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (34 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147  00F9AE  0EBC               	movlw	low __pidataCOMRAM
   148  00F9B0  6EF6               	movwf	tblptrl,c
   149  00F9B2  0EF8               	movlw	high __pidataCOMRAM
   150  00F9B4  6EF7               	movwf	tblptrh,c
   151  00F9B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152  00F9B8  6EF8               	movwf	tblptru,c
   153  00F9BA  EE00  F001         	lfsr	0,__pdataCOMRAM
   154  00F9BE  EE10 F022          	lfsr	1,34
   155  00F9C2                     copy_data0:
   156  00F9C2  0009               	tblrd		*+
   157  00F9C4  CFF5 FFEE          	movff	tablat,postinc0
   158  00F9C8  50E5               	movf	postdec1,w,c
   159  00F9CA  50E1               	movf	fsr1l,w,c
   160  00F9CC  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to COMRAM (12 bytes)
   163  00F9CE  EE00  F035         	lfsr	0,__pbssCOMRAM
   164  00F9D2  0E0C               	movlw	12
   165  00F9D4                     clear_0:
   166  00F9D4  6AEE               	clrf	postinc0,c
   167  00F9D6  06E8               	decf	wreg,f,c
   168  00F9D8  E1FD               	bnz	clear_0
   169  00F9DA                     end_of_initialization:
   170                           	callstack 0
   171  00F9DA                     __end_of__initialization:
   172                           	callstack 0
   173  00F9DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  00F9DC  6EF8               	movwf	tblptru,c
   175  00F9DE  0100               	movlb	0
   176  00F9E0  EF60  F07F         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  000035                     __pbssCOMRAM:
   180                           	callstack 0
   181  000035                     _l_status:
   182                           	callstack 0
   183  000035                     	ds	2
   184  000037                     _r_status:
   185                           	callstack 0
   186  000037                     	ds	2
   187  000039                     _b_status:
   188                           	callstack 0
   189  000039                     	ds	2
   190  00003B                     _f_status:
   191                           	callstack 0
   192  00003B                     	ds	2
   193  00003D                     _motor2:
   194                           	callstack 0
   195  00003D                     	ds	2
   196  00003F                     _motor1:
   197                           	callstack 0
   198  00003F                     	ds	2
   199                           
   200                           	psect	dataCOMRAM
   201  000001                     __pdataCOMRAM:
   202                           	callstack 0
   203  000001                     _port_register:
   204                           	callstack 0
   205  000001                     	ds	10
   206  00000B                     _lat_register:
   207                           	callstack 0
   208  00000B                     	ds	10
   209  000015                     _tris_register:
   210                           	callstack 0
   211  000015                     	ds	10
   212  00001F                     _btn_left:
   213                           	callstack 0
   214  00001F                     	ds	1
   215  000020                     _btn_right:
   216                           	callstack 0
   217  000020                     	ds	1
   218  000021                     _btn_backward:
   219                           	callstack 0
   220  000021                     	ds	1
   221  000022                     _btn_forward:
   222                           	callstack 0
   223  000022                     	ds	1
   224                           
   225                           	psect	cstackCOMRAM
   226  000023                     __pcstackCOMRAM:
   227                           	callstack 0
   228  000023                     gpio_pin_direction_intialize@pin:
   229                           	callstack 0
   230  000023                     gpio_pin_write_value@pin:
   231                           	callstack 0
   232  000023                     gpio_pin_read_value@pin:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x0
   236  000023                     	ds	1
   237  000024                     gpio_pin_direction_intialize@direction:
   238                           	callstack 0
   239  000024                     gpio_pin_write_value@pin_value:
   240                           	callstack 0
   241  000024                     gpio_pin_read_value@logic:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x1
   245  000024                     	ds	1
   246  000025                     ??_gpio_pin_direction_intialize:
   247  000025                     ??_gpio_pin_write_value:
   248                           
   249                           ; 1 bytes @ 0x2
   250  000025                     	ds	1
   251  000026                     ??_gpio_pin_read_value:
   252                           
   253                           ; 1 bytes @ 0x3
   254  000026                     	ds	6
   255  00002C                     gpio_pin_read_value@port:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x9
   259  00002C                     	ds	1
   260  00002D                     gpio_pin_direction_intialize@port:
   261                           	callstack 0
   262  00002D                     gpio_pin_write_value@port:
   263                           	callstack 0
   264  00002D                     btn_read_value@button:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xA
   268  00002D                     	ds	1
   269  00002E                     btn_config@button:
   270                           	callstack 0
   271  00002E                     relay_initialize@relay:
   272                           	callstack 0
   273  00002E                     relay_turn_on@relay:
   274                           	callstack 0
   275  00002E                     relay_turn_off@relay:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xB
   279  00002E                     	ds	1
   280  00002F                     btn_read_value@status:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xC
   284  00002F                     	ds	1
   285  000030                     ??_btn_config:
   286  000030                     ??_relay_initialize:
   287  000030                     ??_relay_turn_on:
   288  000030                     ??_relay_turn_off:
   289                           
   290                           ; 1 bytes @ 0xD
   291  000030                     	ds	1
   292  000031                     ??_btn_read_value:
   293                           
   294                           ; 1 bytes @ 0xE
   295  000031                     	ds	1
   296  000032                     motor_initialize@motor:
   297                           	callstack 0
   298  000032                     motor_turn_on@motor:
   299                           	callstack 0
   300  000032                     motor_stop@motor:
   301                           	callstack 0
   302  000032                     motor_reverse@motor:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0xF
   306  000032                     	ds	2
   307  000034                     
   308                           ; 1 bytes @ 0x11
   309  000034                     	ds	1
   310  000035                     
   311                           ; 1 bytes @ 0x12
   312 ;;
   313 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   314 ;;
   315 ;; *************** function _main *****************
   316 ;; Defined at:
   317 ;;		line 27 in file "Application.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;		None
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;                  2   46[None  ] int 
   324 ;; Registers used:
   325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;Total ram usage:        0 bytes
   336 ;; Hardware stack levels required when called:    4
   337 ;; This function calls:
   338 ;;		_backward
   339 ;;		_btn_config
   340 ;;		_btn_read_value
   341 ;;		_forward
   342 ;;		_motor_initialize
   343 ;;		_stop
   344 ;;		_twist_left
   345 ;;		_twist_right
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  00FEC0                     __ptext0:
   353                           	callstack 0
   354  00FEC0                     _main:
   355                           	callstack 27
   356  00FEC0                     
   357                           ;Application.c: 28:     motor1.relay1.port_name = PORTC_INDEX;
   358  00FEC0  503F               	movf	_motor1^0,w,c
   359  00FEC2  0BF0               	andlw	-16
   360  00FEC4  0902               	iorlw	2
   361  00FEC6  6E3F               	movwf	_motor1^0,c
   362                           
   363                           ;Application.c: 29:     motor1.relay1.pin = PIN0;
   364  00FEC8  0E8F               	movlw	-113
   365  00FECA  163F               	andwf	_motor1^0,f,c
   366  00FECC                     
   367                           ;Application.c: 30:     motor1.relay1.relay_status = relay_off;
   368  00FECC  8E3F               	bsf	_motor1^0,7,c
   369                           
   370                           ;Application.c: 31:     motor1.relay2.port_name = PORTC_INDEX;
   371  00FECE  5040               	movf	(_motor1+1)^0,w,c
   372  00FED0  0BF0               	andlw	-16
   373  00FED2  0902               	iorlw	2
   374  00FED4  6E40               	movwf	(_motor1+1)^0,c
   375                           
   376                           ;Application.c: 32:     motor1.relay2.pin = PIN1;
   377  00FED6  5040               	movf	(_motor1+1)^0,w,c
   378  00FED8  0B8F               	andlw	-113
   379  00FEDA  0910               	iorlw	16
   380  00FEDC  6E40               	movwf	(_motor1+1)^0,c
   381  00FEDE                     
   382                           ;Application.c: 33:     motor1.relay2.relay_status = relay_off;
   383  00FEDE  8E40               	bsf	(_motor1+1)^0,7,c
   384                           
   385                           ;Application.c: 35:     motor2.relay1.port_name = PORTC_INDEX;
   386  00FEE0  503D               	movf	_motor2^0,w,c
   387  00FEE2  0BF0               	andlw	-16
   388  00FEE4  0902               	iorlw	2
   389  00FEE6  6E3D               	movwf	_motor2^0,c
   390                           
   391                           ;Application.c: 36:     motor2.relay1.pin = PIN2;
   392  00FEE8  503D               	movf	_motor2^0,w,c
   393  00FEEA  0B8F               	andlw	-113
   394  00FEEC  0920               	iorlw	32
   395  00FEEE  6E3D               	movwf	_motor2^0,c
   396  00FEF0                     
   397                           ;Application.c: 37:     motor2.relay1.relay_status = relay_off;
   398  00FEF0  8E3D               	bsf	_motor2^0,7,c
   399                           
   400                           ;Application.c: 38:     motor2.relay2.port_name = PORTC_INDEX;
   401  00FEF2  503E               	movf	(_motor2+1)^0,w,c
   402  00FEF4  0BF0               	andlw	-16
   403  00FEF6  0902               	iorlw	2
   404  00FEF8  6E3E               	movwf	(_motor2+1)^0,c
   405                           
   406                           ;Application.c: 39:     motor2.relay2.pin = PIN3;
   407  00FEFA  503E               	movf	(_motor2+1)^0,w,c
   408  00FEFC  0B8F               	andlw	-113
   409  00FEFE  0930               	iorlw	48
   410  00FF00  6E3E               	movwf	(_motor2+1)^0,c
   411  00FF02                     
   412                           ;Application.c: 40:     motor2.relay2.relay_status = relay_off;
   413  00FF02  8E3E               	bsf	(_motor2+1)^0,7,c
   414  00FF04                     
   415                           ;Application.c: 56:     motor_initialize(&motor1);
   416  00FF04  0E3F               	movlw	low _motor1
   417  00FF06  6E32               	movwf	motor_initialize@motor^0,c
   418  00FF08  0E00               	movlw	high _motor1
   419  00FF0A  6E33               	movwf	(motor_initialize@motor+1)^0,c
   420  00FF0C  ECA3  F07C         	call	_motor_initialize	;wreg free
   421  00FF10                     
   422                           ;Application.c: 57:     motor_initialize(&motor2);
   423  00FF10  0E3D               	movlw	low _motor2
   424  00FF12  6E32               	movwf	motor_initialize@motor^0,c
   425  00FF14  0E00               	movlw	high _motor2
   426  00FF16  6E33               	movwf	(motor_initialize@motor+1)^0,c
   427  00FF18  ECA3  F07C         	call	_motor_initialize	;wreg free
   428  00FF1C                     
   429                           ;Application.c: 59:     btn_config(&btn_forward);
   430  00FF1C  0E22               	movlw	low _btn_forward
   431  00FF1E  6E2E               	movwf	btn_config@button^0,c
   432  00FF20  0E00               	movlw	high _btn_forward
   433  00FF22  6E2F               	movwf	(btn_config@button+1)^0,c
   434  00FF24  ECF2  F07C         	call	_btn_config	;wreg free
   435  00FF28                     
   436                           ;Application.c: 60:     btn_config(&btn_backward);
   437  00FF28  0E21               	movlw	low _btn_backward
   438  00FF2A  6E2E               	movwf	btn_config@button^0,c
   439  00FF2C  0E00               	movlw	high _btn_backward
   440  00FF2E  6E2F               	movwf	(btn_config@button+1)^0,c
   441  00FF30  ECF2  F07C         	call	_btn_config	;wreg free
   442  00FF34                     
   443                           ;Application.c: 61:     btn_config(&btn_right);
   444  00FF34  0E20               	movlw	low _btn_right
   445  00FF36  6E2E               	movwf	btn_config@button^0,c
   446  00FF38  0E00               	movlw	high _btn_right
   447  00FF3A  6E2F               	movwf	(btn_config@button+1)^0,c
   448  00FF3C  ECF2  F07C         	call	_btn_config	;wreg free
   449  00FF40                     
   450                           ;Application.c: 62:     btn_config(&btn_left);
   451  00FF40  0E1F               	movlw	low _btn_left
   452  00FF42  6E2E               	movwf	btn_config@button^0,c
   453  00FF44  0E00               	movlw	high _btn_left
   454  00FF46  6E2F               	movwf	(btn_config@button+1)^0,c
   455  00FF48  ECF2  F07C         	call	_btn_config	;wreg free
   456  00FF4C                     l1361:
   457                           
   458                           ;Application.c: 65:         btn_read_value(&btn_forward , &f_status);
   459  00FF4C  0E22               	movlw	low _btn_forward
   460  00FF4E  6E2D               	movwf	btn_read_value@button^0,c
   461  00FF50  0E00               	movlw	high _btn_forward
   462  00FF52  6E2E               	movwf	(btn_read_value@button+1)^0,c
   463  00FF54  0E3B               	movlw	low _f_status
   464  00FF56  6E2F               	movwf	btn_read_value@status^0,c
   465  00FF58  0E00               	movlw	high _f_status
   466  00FF5A  6E30               	movwf	(btn_read_value@status+1)^0,c
   467  00FF5C  EC34  F07E         	call	_btn_read_value	;wreg free
   468  00FF60                     
   469                           ;Application.c: 66:         btn_read_value(&btn_backward , &b_status);
   470  00FF60  0E21               	movlw	low _btn_backward
   471  00FF62  6E2D               	movwf	btn_read_value@button^0,c
   472  00FF64  0E00               	movlw	high _btn_backward
   473  00FF66  6E2E               	movwf	(btn_read_value@button+1)^0,c
   474  00FF68  0E39               	movlw	low _b_status
   475  00FF6A  6E2F               	movwf	btn_read_value@status^0,c
   476  00FF6C  0E00               	movlw	high _b_status
   477  00FF6E  6E30               	movwf	(btn_read_value@status+1)^0,c
   478  00FF70  EC34  F07E         	call	_btn_read_value	;wreg free
   479  00FF74                     
   480                           ;Application.c: 67:         btn_read_value(&btn_right , &r_status);
   481  00FF74  0E20               	movlw	low _btn_right
   482  00FF76  6E2D               	movwf	btn_read_value@button^0,c
   483  00FF78  0E00               	movlw	high _btn_right
   484  00FF7A  6E2E               	movwf	(btn_read_value@button+1)^0,c
   485  00FF7C  0E37               	movlw	low _r_status
   486  00FF7E  6E2F               	movwf	btn_read_value@status^0,c
   487  00FF80  0E00               	movlw	high _r_status
   488  00FF82  6E30               	movwf	(btn_read_value@status+1)^0,c
   489  00FF84  EC34  F07E         	call	_btn_read_value	;wreg free
   490  00FF88                     
   491                           ;Application.c: 68:         btn_read_value(&btn_left , &l_status);
   492  00FF88  0E1F               	movlw	low _btn_left
   493  00FF8A  6E2D               	movwf	btn_read_value@button^0,c
   494  00FF8C  0E00               	movlw	high _btn_left
   495  00FF8E  6E2E               	movwf	(btn_read_value@button+1)^0,c
   496  00FF90  0E35               	movlw	low _l_status
   497  00FF92  6E2F               	movwf	btn_read_value@status^0,c
   498  00FF94  0E00               	movlw	high _l_status
   499  00FF96  6E30               	movwf	(btn_read_value@status+1)^0,c
   500  00FF98  EC34  F07E         	call	_btn_read_value	;wreg free
   501  00FF9C                     
   502                           ;Application.c: 69:         if(btn_forward.btn_status == BUTTON_PRESSED){
   503  00FF9C  AE22               	btfss	_btn_forward^0,7,c
   504  00FF9E  EFD3  F07F         	goto	u611
   505  00FFA2  EFD5  F07F         	goto	u610
   506  00FFA6                     u611:
   507  00FFA6  EFD9  F07F         	goto	l48
   508  00FFAA                     u610:
   509  00FFAA                     
   510                           ;Application.c: 70:             forward();
   511  00FFAA  EC2A  F07C         	call	_forward	;wreg free
   512                           
   513                           ;Application.c: 71:         }else if(btn_backward.btn_status == BUTTON_PRESSED){
   514  00FFAE  EFA6  F07F         	goto	l1361
   515  00FFB2                     l48:
   516  00FFB2  AE21               	btfss	_btn_backward^0,7,c
   517  00FFB4  EFDE  F07F         	goto	u621
   518  00FFB8  EFE0  F07F         	goto	u620
   519  00FFBC                     u621:
   520  00FFBC  EFE4  F07F         	goto	l50
   521  00FFC0                     u620:
   522  00FFC0                     
   523                           ;Application.c: 72:             backward();
   524  00FFC0  EC1D  F07C         	call	_backward	;wreg free
   525                           
   526                           ;Application.c: 73:         }else if(btn_right.btn_status == BUTTON_PRESSED){
   527  00FFC4  EFA6  F07F         	goto	l1361
   528  00FFC8                     l50:
   529  00FFC8  AE20               	btfss	_btn_right^0,7,c
   530  00FFCA  EFE9  F07F         	goto	u631
   531  00FFCE  EFEB  F07F         	goto	u630
   532  00FFD2                     u631:
   533  00FFD2  EFEF  F07F         	goto	l52
   534  00FFD6                     u630:
   535  00FFD6                     
   536                           ;Application.c: 74:             twist_right();
   537  00FFD6  EC51  F07C         	call	_twist_right	;wreg free
   538                           
   539                           ;Application.c: 75:         }else if(btn_left.btn_status == BUTTON_PRESSED){
   540  00FFDA  EFA6  F07F         	goto	l1361
   541  00FFDE                     l52:
   542  00FFDE  AE1F               	btfss	_btn_left^0,7,c
   543  00FFE0  EFF4  F07F         	goto	u641
   544  00FFE4  EFF6  F07F         	goto	u640
   545  00FFE8                     u641:
   546  00FFE8  EFFA  F07F         	goto	l1379
   547  00FFEC                     u640:
   548  00FFEC                     
   549                           ;Application.c: 76:             twist_left();
   550  00FFEC  EC44  F07C         	call	_twist_left	;wreg free
   551                           
   552                           ;Application.c: 77:         }else{
   553  00FFF0  EFA6  F07F         	goto	l1361
   554  00FFF4                     l1379:
   555                           
   556                           ;Application.c: 78:             stop();
   557  00FFF4  EC37  F07C         	call	_stop	;wreg free
   558  00FFF8  EFA6  F07F         	goto	l1361
   559  00FFFC  EF00  F000         	goto	start
   560  010000                     __end_of_main:
   561                           	callstack 0
   562                           
   563 ;; *************** function _twist_right *****************
   564 ;; Defined at:
   565 ;;		line 99 in file "Application.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		_motor_reverse
   588 ;;		_motor_turn_on
   589 ;; This function is called by:
   590 ;;		_main
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text1
   595  00F8A2                     __ptext1:
   596                           	callstack 0
   597  00F8A2                     _twist_right:
   598                           	callstack 27
   599  00F8A2                     
   600                           ;Application.c: 100:     motor_turn_on(&motor2);
   601  00F8A2  0E3D               	movlw	low _motor2
   602  00F8A4  6E32               	movwf	motor_turn_on@motor^0,c
   603  00F8A6  0E00               	movlw	high _motor2
   604  00F8A8  6E33               	movwf	(motor_turn_on@motor+1)^0,c
   605  00F8AA  EC89  F07C         	call	_motor_turn_on	;wreg free
   606                           
   607                           ;Application.c: 101:     motor_reverse(&motor1);
   608  00F8AE  0E3F               	movlw	low _motor1
   609  00F8B0  6E32               	movwf	motor_reverse@motor^0,c
   610  00F8B2  0E00               	movlw	high _motor1
   611  00F8B4  6E33               	movwf	(motor_reverse@motor+1)^0,c
   612  00F8B6  EC6F  F07C         	call	_motor_reverse	;wreg free
   613  00F8BA  0012               	return		;funcret
   614  00F8BC                     __end_of_twist_right:
   615                           	callstack 0
   616                           
   617 ;; *************** function _twist_left *****************
   618 ;; Defined at:
   619 ;;		line 104 in file "Application.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    3
   640 ;; This function calls:
   641 ;;		_motor_reverse
   642 ;;		_motor_turn_on
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649  00F888                     __ptext2:
   650                           	callstack 0
   651  00F888                     _twist_left:
   652                           	callstack 27
   653  00F888                     
   654                           ;Application.c: 105:     motor_reverse(&motor2);
   655  00F888  0E3D               	movlw	low _motor2
   656  00F88A  6E32               	movwf	motor_reverse@motor^0,c
   657  00F88C  0E00               	movlw	high _motor2
   658  00F88E  6E33               	movwf	(motor_reverse@motor+1)^0,c
   659  00F890  EC6F  F07C         	call	_motor_reverse	;wreg free
   660                           
   661                           ;Application.c: 106:     motor_turn_on(&motor1);
   662  00F894  0E3F               	movlw	low _motor1
   663  00F896  6E32               	movwf	motor_turn_on@motor^0,c
   664  00F898  0E00               	movlw	high _motor1
   665  00F89A  6E33               	movwf	(motor_turn_on@motor+1)^0,c
   666  00F89C  EC89  F07C         	call	_motor_turn_on	;wreg free
   667  00F8A0  0012               	return		;funcret
   668  00F8A2                     __end_of_twist_left:
   669                           	callstack 0
   670                           
   671 ;; *************** function _stop *****************
   672 ;; Defined at:
   673 ;;		line 94 in file "Application.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		_motor_stop
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text3
   702  00F86E                     __ptext3:
   703                           	callstack 0
   704  00F86E                     _stop:
   705                           	callstack 27
   706  00F86E                     
   707                           ;Application.c: 95:     motor_stop(&motor1);
   708  00F86E  0E3F               	movlw	low _motor1
   709  00F870  6E32               	movwf	motor_stop@motor^0,c
   710  00F872  0E00               	movlw	high _motor1
   711  00F874  6E33               	movwf	(motor_stop@motor+1)^0,c
   712  00F876  ECBD  F07C         	call	_motor_stop	;wreg free
   713                           
   714                           ;Application.c: 96:     motor_stop(&motor2);
   715  00F87A  0E3D               	movlw	low _motor2
   716  00F87C  6E32               	movwf	motor_stop@motor^0,c
   717  00F87E  0E00               	movlw	high _motor2
   718  00F880  6E33               	movwf	(motor_stop@motor+1)^0,c
   719  00F882  ECBD  F07C         	call	_motor_stop	;wreg free
   720  00F886  0012               	return		;funcret
   721  00F888                     __end_of_stop:
   722                           	callstack 0
   723                           
   724 ;; *************** function _motor_stop *****************
   725 ;; Defined at:
   726 ;;		line 36 in file "dc_motor.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  motor           2   15[COMRAM] PTR struct .
   729 ;;		 -> motor2(2), motor1(2), 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  ret             1    0        enum E2681
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      enum E2999
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        3 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    2
   748 ;; This function calls:
   749 ;;		_relay_turn_off
   750 ;; This function is called by:
   751 ;;		_stop
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text4
   756  00F97A                     __ptext4:
   757                           	callstack 0
   758  00F97A                     _motor_stop:
   759                           	callstack 27
   760  00F97A                     
   761                           ;dc_motor.c: 38:     if(((void*)0) == motor){
   762  00F97A  5032               	movf	motor_stop@motor^0,w,c
   763  00F97C  1033               	iorwf	(motor_stop@motor+1)^0,w,c
   764  00F97E  A4D8               	btfss	status,2,c
   765  00F980  EFC4  F07C         	goto	u471
   766  00F984  EFC6  F07C         	goto	u470
   767  00F988                     u471:
   768  00F988  EFC8  F07C         	goto	l1245
   769  00F98C                     u470:
   770  00F98C  EFD6  F07C         	goto	l203
   771  00F990                     l1245:
   772                           
   773                           ;dc_motor.c: 41:         relay_turn_off(&(motor->relay1));
   774  00F990  C032  F02E         	movff	motor_stop@motor,relay_turn_off@relay
   775  00F994  C033  F02F         	movff	motor_stop@motor+1,relay_turn_off@relay+1
   776  00F998  EC68  F07D         	call	_relay_turn_off	;wreg free
   777                           
   778                           ;dc_motor.c: 42:         relay_turn_off(&(motor->relay2));
   779  00F99C  0E01               	movlw	1
   780  00F99E  2432               	addwf	motor_stop@motor^0,w,c
   781  00F9A0  6E2E               	movwf	relay_turn_off@relay^0,c
   782  00F9A2  0E00               	movlw	0
   783  00F9A4  2033               	addwfc	(motor_stop@motor+1)^0,w,c
   784  00F9A6  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
   785  00F9A8  EC68  F07D         	call	_relay_turn_off	;wreg free
   786  00F9AC                     l203:
   787  00F9AC  0012               	return		;funcret
   788  00F9AE                     __end_of_motor_stop:
   789                           	callstack 0
   790                           
   791 ;; *************** function _motor_initialize *****************
   792 ;; Defined at:
   793 ;;		line 11 in file "dc_motor.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  motor           2   15[COMRAM] PTR struct .
   796 ;;		 -> motor2(2), motor1(2), 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  ret             1    0        enum E2681
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      enum E2999
   801 ;; Registers used:
   802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        3 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		_relay_initialize
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text5
   823  00F946                     __ptext5:
   824                           	callstack 0
   825  00F946                     _motor_initialize:
   826                           	callstack 28
   827  00F946                     
   828                           ;dc_motor.c: 13:     if(((void*)0) == motor){
   829  00F946  5032               	movf	motor_initialize@motor^0,w,c
   830  00F948  1033               	iorwf	(motor_initialize@motor+1)^0,w,c
   831  00F94A  A4D8               	btfss	status,2,c
   832  00F94C  EFAA  F07C         	goto	u541
   833  00F950  EFAC  F07C         	goto	u540
   834  00F954                     u541:
   835  00F954  EFAE  F07C         	goto	l1289
   836  00F958                     u540:
   837  00F958  EFBC  F07C         	goto	l193
   838  00F95C                     l1289:
   839                           
   840                           ;dc_motor.c: 17:         relay_initialize(&(motor->relay1));
   841  00F95C  C032  F02E         	movff	motor_initialize@motor,relay_initialize@relay
   842  00F960  C033  F02F         	movff	motor_initialize@motor+1,relay_initialize@relay+1
   843  00F964  ECE8  F07D         	call	_relay_initialize	;wreg free
   844                           
   845                           ;dc_motor.c: 18:         relay_initialize(&(motor->relay2));
   846  00F968  0E01               	movlw	1
   847  00F96A  2432               	addwf	motor_initialize@motor^0,w,c
   848  00F96C  6E2E               	movwf	relay_initialize@relay^0,c
   849  00F96E  0E00               	movlw	0
   850  00F970  2033               	addwfc	(motor_initialize@motor+1)^0,w,c
   851  00F972  6E2F               	movwf	(relay_initialize@relay+1)^0,c
   852  00F974  ECE8  F07D         	call	_relay_initialize	;wreg free
   853  00F978                     l193:
   854  00F978  0012               	return		;funcret
   855  00F97A                     __end_of_motor_initialize:
   856                           	callstack 0
   857                           
   858 ;; *************** function _relay_initialize *****************
   859 ;; Defined at:
   860 ;;		line 11 in file "relay.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  relay           2   11[COMRAM] PTR struct .
   863 ;;		 -> motor2(2), motor1(2), 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  ret             1    0        enum E2681
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      enum E2681
   868 ;; Registers used:
   869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        4 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    1
   882 ;; This function calls:
   883 ;;		_gpio_pin_direction_intialize
   884 ;;		_gpio_pin_write_value
   885 ;; This function is called by:
   886 ;;		_motor_initialize
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text6
   891  00FBD0                     __ptext6:
   892                           	callstack 0
   893  00FBD0                     _relay_initialize:
   894                           	callstack 28
   895  00FBD0                     
   896                           ;relay.c: 13:     if((((void*)0) == relay) || (relay->port_name > 5U -1) ||
   897  00FBD0  502E               	movf	relay_initialize@relay^0,w,c
   898  00FBD2  102F               	iorwf	(relay_initialize@relay+1)^0,w,c
   899  00FBD4  B4D8               	btfsc	status,2,c
   900  00FBD6  EFEF  F07D         	goto	u511
   901  00FBDA  EFF1  F07D         	goto	u510
   902  00FBDE                     u511:
   903  00FBDE  EF33  F07E         	goto	l168
   904  00FBE2                     u510:
   905  00FBE2  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   906  00FBE6  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   907  00FBEA  50DF               	movf	indf2,w,c
   908  00FBEC  0B0F               	andlw	15
   909  00FBEE  6E30               	movwf	??_relay_initialize^0,c
   910  00FBF0  0E05               	movlw	5
   911  00FBF2  6030               	cpfslt	??_relay_initialize^0,c
   912  00FBF4  EFFE  F07D         	goto	u521
   913  00FBF8  EF00  F07E         	goto	u520
   914  00FBFC                     u521:
   915  00FBFC  EF33  F07E         	goto	l168
   916  00FC00                     u520:
   917  00FC00  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   918  00FC04  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   919  00FC08  38DF               	swapf	indf2,w,c
   920  00FC0A  0B07               	andlw	7
   921  00FC0C  6E30               	movwf	??_relay_initialize^0,c
   922  00FC0E  0E07               	movlw	7
   923  00FC10  6430               	cpfsgt	??_relay_initialize^0,c
   924  00FC12  EF0D  F07E         	goto	u531
   925  00FC16  EF0F  F07E         	goto	u530
   926  00FC1A                     u531:
   927  00FC1A  EF11  F07E         	goto	l1275
   928  00FC1E                     u530:
   929  00FC1E  EF33  F07E         	goto	l168
   930  00FC22                     l1275:
   931                           
   932                           ;relay.c: 18:         gpio_pin_direction_intialize(relay->port_name, relay->pin, DIRECTI
      +                          ON_OUTPUT);
   933  00FC22  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   934  00FC26  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   935  00FC2A  38DF               	swapf	indf2,w,c
   936  00FC2C  0B07               	andlw	7
   937  00FC2E  6E23               	movwf	gpio_pin_direction_intialize@pin^0,c
   938  00FC30  0E00               	movlw	0
   939  00FC32  6E24               	movwf	gpio_pin_direction_intialize@direction^0,c
   940  00FC34  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   941  00FC38  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   942  00FC3C  50DF               	movf	indf2,w,c
   943  00FC3E  0B0F               	andlw	15
   944  00FC40  ECF1  F07E         	call	_gpio_pin_direction_intialize
   945                           
   946                           ;relay.c: 19:         gpio_pin_write_value(relay->port_name, relay->pin, PIN_LOW);
   947  00FC44  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   948  00FC48  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   949  00FC4C  38DF               	swapf	indf2,w,c
   950  00FC4E  0B07               	andlw	7
   951  00FC50  6E23               	movwf	gpio_pin_write_value@pin^0,c
   952  00FC52  0E00               	movlw	0
   953  00FC54  6E24               	movwf	gpio_pin_write_value@pin_value^0,c
   954  00FC56  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
   955  00FC5A  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
   956  00FC5E  50DF               	movf	indf2,w,c
   957  00FC60  0B0F               	andlw	15
   958  00FC62  EC82  F07E         	call	_gpio_pin_write_value
   959  00FC66                     l168:
   960  00FC66  0012               	return		;funcret
   961  00FC68                     __end_of_relay_initialize:
   962                           	callstack 0
   963                           
   964 ;; *************** function _forward *****************
   965 ;; Defined at:
   966 ;;		line 84 in file "Application.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    3
   987 ;; This function calls:
   988 ;;		_motor_turn_on
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text7
   995  00F854                     __ptext7:
   996                           	callstack 0
   997  00F854                     _forward:
   998                           	callstack 27
   999  00F854                     
  1000                           ;Application.c: 85:     motor_turn_on(&motor1);
  1001  00F854  0E3F               	movlw	low _motor1
  1002  00F856  6E32               	movwf	motor_turn_on@motor^0,c
  1003  00F858  0E00               	movlw	high _motor1
  1004  00F85A  6E33               	movwf	(motor_turn_on@motor+1)^0,c
  1005  00F85C  EC89  F07C         	call	_motor_turn_on	;wreg free
  1006                           
  1007                           ;Application.c: 86:     motor_turn_on(&motor2);
  1008  00F860  0E3D               	movlw	low _motor2
  1009  00F862  6E32               	movwf	motor_turn_on@motor^0,c
  1010  00F864  0E00               	movlw	high _motor2
  1011  00F866  6E33               	movwf	(motor_turn_on@motor+1)^0,c
  1012  00F868  EC89  F07C         	call	_motor_turn_on	;wreg free
  1013  00F86C  0012               	return		;funcret
  1014  00F86E                     __end_of_forward:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _motor_turn_on *****************
  1018 ;; Defined at:
  1019 ;;		line 24 in file "dc_motor.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  motor           2   15[COMRAM] PTR struct .
  1022 ;;		 -> motor2(2), motor1(2), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  ret             1    0        enum E2681
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      enum E2999
  1027 ;; Registers used:
  1028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;Total ram usage:        3 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		_relay_turn_off
  1043 ;;		_relay_turn_on
  1044 ;; This function is called by:
  1045 ;;		_forward
  1046 ;;		_twist_right
  1047 ;;		_twist_left
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text8
  1052  00F912                     __ptext8:
  1053                           	callstack 0
  1054  00F912                     _motor_turn_on:
  1055                           	callstack 27
  1056  00F912                     
  1057                           ;dc_motor.c: 26:     if(((void*)0) == motor){
  1058  00F912  5032               	movf	motor_turn_on@motor^0,w,c
  1059  00F914  1033               	iorwf	(motor_turn_on@motor+1)^0,w,c
  1060  00F916  A4D8               	btfss	status,2,c
  1061  00F918  EF90  F07C         	goto	u451
  1062  00F91C  EF92  F07C         	goto	u450
  1063  00F920                     u451:
  1064  00F920  EF94  F07C         	goto	l1217
  1065  00F924                     u450:
  1066  00F924  EFA2  F07C         	goto	l198
  1067  00F928                     l1217:
  1068                           
  1069                           ;dc_motor.c: 29:         relay_turn_on(&(motor->relay1));
  1070  00F928  C032  F02E         	movff	motor_turn_on@motor,relay_turn_on@relay
  1071  00F92C  C033  F02F         	movff	motor_turn_on@motor+1,relay_turn_on@relay+1
  1072  00F930  ECA8  F07D         	call	_relay_turn_on	;wreg free
  1073                           
  1074                           ;dc_motor.c: 30:         relay_turn_off(&(motor->relay2));
  1075  00F934  0E01               	movlw	1
  1076  00F936  2432               	addwf	motor_turn_on@motor^0,w,c
  1077  00F938  6E2E               	movwf	relay_turn_off@relay^0,c
  1078  00F93A  0E00               	movlw	0
  1079  00F93C  2033               	addwfc	(motor_turn_on@motor+1)^0,w,c
  1080  00F93E  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
  1081  00F940  EC68  F07D         	call	_relay_turn_off	;wreg free
  1082  00F944                     l198:
  1083  00F944  0012               	return		;funcret
  1084  00F946                     __end_of_motor_turn_on:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _btn_read_value *****************
  1088 ;; Defined at:
  1089 ;;		line 24 in file "button.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  button          2   10[COMRAM] PTR struct .
  1092 ;;		 -> btn_left(1), btn_right(1), btn_backward(1), btn_forward(1), 
  1093 ;;  status          2   12[COMRAM] PTR enum E2727
  1094 ;;		 -> l_status(2), r_status(2), b_status(2), f_status(2), 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  ret             1    0        enum E2681
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      enum E2999
  1099 ;; Registers used:
  1100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;Total ram usage:        6 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    1
  1113 ;; This function calls:
  1114 ;;		_gpio_pin_read_value
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text9
  1121  00FC68                     __ptext9:
  1122                           	callstack 0
  1123  00FC68                     _btn_read_value:
  1124                           	callstack 29
  1125  00FC68                     
  1126                           ;button.c: 26:     if((((void*)0) == button) || (button->port_name > 5U -1) ||
  1127  00FC68  502D               	movf	btn_read_value@button^0,w,c
  1128  00FC6A  102E               	iorwf	(btn_read_value@button+1)^0,w,c
  1129  00FC6C  B4D8               	btfsc	status,2,c
  1130  00FC6E  EF3B  F07E         	goto	u581
  1131  00FC72  EF3D  F07E         	goto	u580
  1132  00FC76                     u581:
  1133  00FC76  EF81  F07E         	goto	l157
  1134  00FC7A                     u580:
  1135  00FC7A  C02D  FFD9         	movff	btn_read_value@button,fsr2l
  1136  00FC7E  C02E  FFDA         	movff	btn_read_value@button+1,fsr2h
  1137  00FC82  50DF               	movf	indf2,w,c
  1138  00FC84  0B0F               	andlw	15
  1139  00FC86  6E31               	movwf	??_btn_read_value^0,c
  1140  00FC88  0E05               	movlw	5
  1141  00FC8A  6031               	cpfslt	??_btn_read_value^0,c
  1142  00FC8C  EF4A  F07E         	goto	u591
  1143  00FC90  EF4C  F07E         	goto	u590
  1144  00FC94                     u591:
  1145  00FC94  EF81  F07E         	goto	l157
  1146  00FC98                     u590:
  1147  00FC98  C02D  FFD9         	movff	btn_read_value@button,fsr2l
  1148  00FC9C  C02E  FFDA         	movff	btn_read_value@button+1,fsr2h
  1149  00FCA0  38DF               	swapf	indf2,w,c
  1150  00FCA2  0B07               	andlw	7
  1151  00FCA4  6E31               	movwf	??_btn_read_value^0,c
  1152  00FCA6  0E07               	movlw	7
  1153  00FCA8  6431               	cpfsgt	??_btn_read_value^0,c
  1154  00FCAA  EF59  F07E         	goto	u601
  1155  00FCAE  EF5B  F07E         	goto	u600
  1156  00FCB2                     u601:
  1157  00FCB2  EF5D  F07E         	goto	l1321
  1158  00FCB6                     u600:
  1159  00FCB6  EF81  F07E         	goto	l157
  1160  00FCBA                     l1321:
  1161                           
  1162                           ;button.c: 31:         gpio_pin_read_value(button->port_name, button->pin, status);
  1163  00FCBA  C02D  FFD9         	movff	btn_read_value@button,fsr2l
  1164  00FCBE  C02E  FFDA         	movff	btn_read_value@button+1,fsr2h
  1165  00FCC2  38DF               	swapf	indf2,w,c
  1166  00FCC4  0B07               	andlw	7
  1167  00FCC6  6E23               	movwf	gpio_pin_read_value@pin^0,c
  1168  00FCC8  C02F  F024         	movff	btn_read_value@status,gpio_pin_read_value@logic
  1169  00FCCC  C030  F025         	movff	btn_read_value@status+1,gpio_pin_read_value@logic+1
  1170  00FCD0  C02D  FFD9         	movff	btn_read_value@button,fsr2l
  1171  00FCD4  C02E  FFDA         	movff	btn_read_value@button+1,fsr2h
  1172  00FCD8  50DF               	movf	indf2,w,c
  1173  00FCDA  0B0F               	andlw	15
  1174  00FCDC  EC2D  F07D         	call	_gpio_pin_read_value
  1175  00FCE0                     
  1176                           ;button.c: 32:         button->btn_status = *status;
  1177  00FCE0  C02F  FFD9         	movff	btn_read_value@status,fsr2l
  1178  00FCE4  C030  FFDA         	movff	btn_read_value@status+1,fsr2h
  1179  00FCE8  50DF               	movf	indf2,w,c
  1180  00FCEA  6E31               	movwf	??_btn_read_value^0,c
  1181  00FCEC  C02D  FFD9         	movff	btn_read_value@button,fsr2l
  1182  00FCF0  C02E  FFDA         	movff	btn_read_value@button+1,fsr2h
  1183  00FCF4  3231               	rrcf	??_btn_read_value^0,f,c
  1184  00FCF6  3231               	rrcf	??_btn_read_value^0,f,c
  1185  00FCF8  50DF               	movf	indf2,w,c
  1186  00FCFA  1831               	xorwf	??_btn_read_value^0,w,c
  1187  00FCFC  0B7F               	andlw	-129
  1188  00FCFE  1831               	xorwf	??_btn_read_value^0,w,c
  1189  00FD00  6EDF               	movwf	indf2,c
  1190  00FD02                     l157:
  1191  00FD02  0012               	return		;funcret
  1192  00FD04                     __end_of_btn_read_value:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _gpio_pin_read_value *****************
  1196 ;; Defined at:
  1197 ;;		line 54 in file "mcal_gpio.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  port            1    wreg     enum E2703
  1200 ;;  pin             1    0[COMRAM] enum E2693
  1201 ;;  logic           2    1[COMRAM] PTR enum E2685
  1202 ;;		 -> l_status(2), r_status(2), b_status(2), f_status(2), 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  port            1    9[COMRAM] enum E2703
  1205 ;;  ret             1    0        enum E2681
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      enum E2681
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1215 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1217 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1218 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;Total ram usage:       10 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_btn_read_value
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text10
  1229  00FA5A                     __ptext10:
  1230                           	callstack 0
  1231  00FA5A                     _gpio_pin_read_value:
  1232                           	callstack 29
  1233                           
  1234                           ;incstack = 0
  1235                           ;gpio_pin_read_value@port stored from wreg
  1236  00FA5A  6E2C               	movwf	gpio_pin_read_value@port^0,c
  1237  00FA5C                     
  1238                           ;mcal_gpio.c: 56:     if(pin > 8U -1 || ((void*)0) == logic){
  1239  00FA5C  0E08               	movlw	8
  1240  00FA5E  6023               	cpfslt	gpio_pin_read_value@pin^0,c
  1241  00FA60  EF34  F07D         	goto	u481
  1242  00FA64  EF36  F07D         	goto	u480
  1243  00FA68                     u481:
  1244  00FA68  EF67  F07D         	goto	l139
  1245  00FA6C                     u480:
  1246  00FA6C  5024               	movf	gpio_pin_read_value@logic^0,w,c
  1247  00FA6E  1025               	iorwf	(gpio_pin_read_value@logic+1)^0,w,c
  1248  00FA70  A4D8               	btfss	status,2,c
  1249  00FA72  EF3D  F07D         	goto	u491
  1250  00FA76  EF3F  F07D         	goto	u490
  1251  00FA7A                     u491:
  1252  00FA7A  EF41  F07D         	goto	l1259
  1253  00FA7E                     u490:
  1254  00FA7E  EF67  F07D         	goto	l139
  1255  00FA82                     l1259:
  1256                           
  1257                           ;mcal_gpio.c: 60:         *logic = ((*port_register[port] >> pin) & 1U);
  1258  00FA82  C023  F026         	movff	gpio_pin_read_value@pin,??_gpio_pin_read_value
  1259  00FA86  502C               	movf	gpio_pin_read_value@port^0,w,c
  1260  00FA88  0D02               	mullw	2
  1261  00FA8A  0E01               	movlw	low _port_register
  1262  00FA8C  24F3               	addwf	243,w,c
  1263  00FA8E  6ED9               	movwf	fsr2l,c
  1264  00FA90  0E00               	movlw	high _port_register
  1265  00FA92  20F4               	addwfc	prodh,w,c
  1266  00FA94  6EDA               	movwf	fsr2h,c
  1267  00FA96  CFDE F027          	movff	postinc2,??_gpio_pin_read_value+1
  1268  00FA9A  CFDD F028          	movff	postdec2,??_gpio_pin_read_value+2
  1269  00FA9E  C027  FFD9         	movff	??_gpio_pin_read_value+1,fsr2l
  1270  00FAA2  C028  FFDA         	movff	??_gpio_pin_read_value+2,fsr2h
  1271  00FAA6  CFDE F029          	movff	postinc2,??_gpio_pin_read_value+3
  1272  00FAAA  CFDD F02A          	movff	postdec2,??_gpio_pin_read_value+4
  1273  00FAAE  2A26               	incf	??_gpio_pin_read_value^0,f,c
  1274  00FAB0  EF5D  F07D         	goto	u504
  1275  00FAB4                     u505:
  1276  00FAB4  90D8               	bcf	status,0,c
  1277  00FAB6  322A               	rrcf	(??_gpio_pin_read_value+4)^0,f,c
  1278  00FAB8  3229               	rrcf	(??_gpio_pin_read_value+3)^0,f,c
  1279  00FABA                     u504:
  1280  00FABA  2E26               	decfsz	??_gpio_pin_read_value^0,f,c
  1281  00FABC  EF5A  F07D         	goto	u505
  1282  00FAC0  5029               	movf	(??_gpio_pin_read_value+3)^0,w,c
  1283  00FAC2  0B01               	andlw	1
  1284  00FAC4  C024  FFD9         	movff	gpio_pin_read_value@logic,fsr2l
  1285  00FAC8  C025  FFDA         	movff	gpio_pin_read_value@logic+1,fsr2h
  1286  00FACC  6EDF               	movwf	indf2,c
  1287  00FACE                     l139:
  1288  00FACE  0012               	return		;funcret
  1289  00FAD0                     __end_of_gpio_pin_read_value:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _btn_config *****************
  1293 ;; Defined at:
  1294 ;;		line 11 in file "button.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  button          2   11[COMRAM] PTR struct .
  1297 ;;		 -> btn_left(1), btn_right(1), btn_backward(1), btn_forward(1), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  ret             1    0        enum E2681
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      enum E2999
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        4 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; Hardware stack levels required when called:    1
  1316 ;; This function calls:
  1317 ;;		_gpio_pin_direction_intialize
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text11
  1324  00F9E4                     __ptext11:
  1325                           	callstack 0
  1326  00F9E4                     _btn_config:
  1327                           	callstack 29
  1328  00F9E4                     
  1329                           ;button.c: 13:     if((((void*)0) == button) || (button->port_name > 5U -1) ||
  1330  00F9E4  502E               	movf	btn_config@button^0,w,c
  1331  00F9E6  102F               	iorwf	(btn_config@button+1)^0,w,c
  1332  00F9E8  B4D8               	btfsc	status,2,c
  1333  00F9EA  EFF9  F07C         	goto	u551
  1334  00F9EE  EFFB  F07C         	goto	u550
  1335  00F9F2                     u551:
  1336  00F9F2  EF2C  F07D         	goto	l150
  1337  00F9F6                     u550:
  1338  00F9F6  C02E  FFD9         	movff	btn_config@button,fsr2l
  1339  00F9FA  C02F  FFDA         	movff	btn_config@button+1,fsr2h
  1340  00F9FE  50DF               	movf	indf2,w,c
  1341  00FA00  0B0F               	andlw	15
  1342  00FA02  6E30               	movwf	??_btn_config^0,c
  1343  00FA04  0E05               	movlw	5
  1344  00FA06  6030               	cpfslt	??_btn_config^0,c
  1345  00FA08  EF08  F07D         	goto	u561
  1346  00FA0C  EF0A  F07D         	goto	u560
  1347  00FA10                     u561:
  1348  00FA10  EF2C  F07D         	goto	l150
  1349  00FA14                     u560:
  1350  00FA14  C02E  FFD9         	movff	btn_config@button,fsr2l
  1351  00FA18  C02F  FFDA         	movff	btn_config@button+1,fsr2h
  1352  00FA1C  38DF               	swapf	indf2,w,c
  1353  00FA1E  0B07               	andlw	7
  1354  00FA20  6E30               	movwf	??_btn_config^0,c
  1355  00FA22  0E07               	movlw	7
  1356  00FA24  6430               	cpfsgt	??_btn_config^0,c
  1357  00FA26  EF17  F07D         	goto	u571
  1358  00FA2A  EF19  F07D         	goto	u570
  1359  00FA2E                     u571:
  1360  00FA2E  EF1B  F07D         	goto	l1305
  1361  00FA32                     u570:
  1362  00FA32  EF2C  F07D         	goto	l150
  1363  00FA36                     l1305:
  1364                           
  1365                           ;button.c: 18:         gpio_pin_direction_intialize(button->port_name, button->pin, DIRE
      +                          CTION_INPUT);
  1366  00FA36  C02E  FFD9         	movff	btn_config@button,fsr2l
  1367  00FA3A  C02F  FFDA         	movff	btn_config@button+1,fsr2h
  1368  00FA3E  38DF               	swapf	indf2,w,c
  1369  00FA40  0B07               	andlw	7
  1370  00FA42  6E23               	movwf	gpio_pin_direction_intialize@pin^0,c
  1371  00FA44  0E01               	movlw	1
  1372  00FA46  6E24               	movwf	gpio_pin_direction_intialize@direction^0,c
  1373  00FA48  C02E  FFD9         	movff	btn_config@button,fsr2l
  1374  00FA4C  C02F  FFDA         	movff	btn_config@button+1,fsr2h
  1375  00FA50  50DF               	movf	indf2,w,c
  1376  00FA52  0B0F               	andlw	15
  1377  00FA54  ECF1  F07E         	call	_gpio_pin_direction_intialize
  1378  00FA58                     l150:
  1379  00FA58  0012               	return		;funcret
  1380  00FA5A                     __end_of_btn_config:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _gpio_pin_direction_intialize *****************
  1384 ;; Defined at:
  1385 ;;		line 18 in file "mcal_gpio.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  port            1    wreg     enum E2703
  1388 ;;  pin             1    0[COMRAM] enum E2693
  1389 ;;  direction       1    1[COMRAM] enum E2689
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  port            1   10[COMRAM] enum E2703
  1392 ;;  ret             1    0        enum E2681
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      enum E2681
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;Total ram usage:       11 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_btn_config
  1412 ;;		_relay_initialize
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text12
  1417  00FDE2                     __ptext12:
  1418                           	callstack 0
  1419  00FDE2                     _gpio_pin_direction_intialize:
  1420                           	callstack 28
  1421                           
  1422                           ;incstack = 0
  1423                           ;gpio_pin_direction_intialize@port stored from wreg
  1424  00FDE2  6E2D               	movwf	gpio_pin_direction_intialize@port^0,c
  1425  00FDE4                     
  1426                           ;mcal_gpio.c: 20:     if(pin > 8U -1 || pin < 0){
  1427  00FDE4  0E08               	movlw	8
  1428  00FDE6  6023               	cpfslt	gpio_pin_direction_intialize@pin^0,c
  1429  00FDE8  EFF8  F07E         	goto	u361
  1430  00FDEC  EFFA  F07E         	goto	u360
  1431  00FDF0                     u361:
  1432  00FDF0  EF5F  F07F         	goto	l115
  1433  00FDF4                     u360:
  1434  00FDF4  EF4A  F07F         	goto	l1171
  1435  00FDF8                     l1165:
  1436                           
  1437                           ;mcal_gpio.c: 26:                 (*tris_register[port] &= ~(1U << pin)); break;
  1438  00FDF8  C023  F025         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  1439  00FDFC  0E01               	movlw	1
  1440  00FDFE  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1441  00FE00  0E00               	movlw	0
  1442  00FE02  6E27               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1443  00FE04  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
  1444  00FE06  EF08  F07F         	goto	u374
  1445  00FE0A                     u375:
  1446  00FE0A  90D8               	bcf	status,0,c
  1447  00FE0C  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1448  00FE0E  3627               	rlcf	(??_gpio_pin_direction_intialize+2)^0,f,c
  1449  00FE10                     u374:
  1450  00FE10  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1451  00FE12  EF05  F07F         	goto	u375
  1452  00FE16  1C26               	comf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1453  00FE18  6E28               	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  1454  00FE1A  1C27               	comf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1455  00FE1C  6E29               	movwf	(??_gpio_pin_direction_intialize+4)^0,c
  1456  00FE1E  502D               	movf	gpio_pin_direction_intialize@port^0,w,c
  1457  00FE20  0D02               	mullw	2
  1458  00FE22  0E15               	movlw	low _tris_register
  1459  00FE24  24F3               	addwf	243,w,c
  1460  00FE26  6ED9               	movwf	fsr2l,c
  1461  00FE28  0E00               	movlw	high _tris_register
  1462  00FE2A  20F4               	addwfc	prodh,w,c
  1463  00FE2C  6EDA               	movwf	fsr2h,c
  1464  00FE2E  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_intialize+5
  1465  00FE32  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_intialize+6
  1466  00FE36  C02A  FFD9         	movff	??_gpio_pin_direction_intialize+5,fsr2l
  1467  00FE3A  C02B  FFDA         	movff	??_gpio_pin_direction_intialize+6,fsr2h
  1468  00FE3E  5028               	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  1469  00FE40  16DE               	andwf	postinc2,f,c
  1470  00FE42  5029               	movf	(??_gpio_pin_direction_intialize+4)^0,w,c
  1471  00FE44  16DD               	andwf	postdec2,f,c
  1472  00FE46  EF5F  F07F         	goto	l115
  1473  00FE4A                     l1167:
  1474                           
  1475                           ;mcal_gpio.c: 29:                 (*tris_register[port] |= (1U << pin)); break;
  1476  00FE4A  C023  F025         	movff	gpio_pin_direction_intialize@pin,??_gpio_pin_direction_intialize
  1477  00FE4E  0E01               	movlw	1
  1478  00FE50  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1479  00FE52  0E00               	movlw	0
  1480  00FE54  6E27               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1481  00FE56  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
  1482  00FE58  EF31  F07F         	goto	u384
  1483  00FE5C                     u385:
  1484  00FE5C  90D8               	bcf	status,0,c
  1485  00FE5E  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1486  00FE60  3627               	rlcf	(??_gpio_pin_direction_intialize+2)^0,f,c
  1487  00FE62                     u384:
  1488  00FE62  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1489  00FE64  EF2E  F07F         	goto	u385
  1490  00FE68  502D               	movf	gpio_pin_direction_intialize@port^0,w,c
  1491  00FE6A  0D02               	mullw	2
  1492  00FE6C  0E15               	movlw	low _tris_register
  1493  00FE6E  24F3               	addwf	243,w,c
  1494  00FE70  6ED9               	movwf	fsr2l,c
  1495  00FE72  0E00               	movlw	high _tris_register
  1496  00FE74  20F4               	addwfc	prodh,w,c
  1497  00FE76  6EDA               	movwf	fsr2h,c
  1498  00FE78  CFDE F028          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1499  00FE7C  CFDD F029          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1500  00FE80  C028  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1501  00FE84  C029  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1502  00FE88  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1503  00FE8A  12DE               	iorwf	postinc2,f,c
  1504  00FE8C  5027               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1505  00FE8E  12DD               	iorwf	postdec2,f,c
  1506  00FE90  EF5F  F07F         	goto	l115
  1507  00FE94                     l1171:
  1508  00FE94  5024               	movf	gpio_pin_direction_intialize@direction^0,w,c
  1509  00FE96  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
  1510  00FE98  6A26               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1511                           
  1512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1513                           ; Switch size 1, requested type "simple"
  1514                           ; Number of cases is 1, Range of values is 0 to 0
  1515                           ; switch strategies available:
  1516                           ; Name         Instructions Cycles
  1517                           ; simple_byte            4     3 (average)
  1518                           ;	Chosen strategy is simple_byte
  1519  00FE9A  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1520  00FE9C  0A00               	xorlw	0	; case 0
  1521  00FE9E  B4D8               	btfsc	status,2,c
  1522  00FEA0  EF54  F07F         	goto	l1389
  1523  00FEA4  EF5F  F07F         	goto	l115
  1524  00FEA8                     l1389:
  1525                           
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 2, Range of values is 0 to 1
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            7     4 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532  00FEA8  5025               	movf	??_gpio_pin_direction_intialize^0,w,c
  1533  00FEAA  0A00               	xorlw	0	; case 0
  1534  00FEAC  B4D8               	btfsc	status,2,c
  1535  00FEAE  EFFC  F07E         	goto	l1165
  1536  00FEB2  0A01               	xorlw	1	; case 1
  1537  00FEB4  B4D8               	btfsc	status,2,c
  1538  00FEB6  EF25  F07F         	goto	l1167
  1539  00FEBA  EF5F  F07F         	goto	l115
  1540  00FEBE                     l115:
  1541  00FEBE  0012               	return		;funcret
  1542  00FEC0                     __end_of_gpio_pin_direction_intialize:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _backward *****************
  1546 ;; Defined at:
  1547 ;;		line 89 in file "Application.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    3
  1568 ;; This function calls:
  1569 ;;		_motor_reverse
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text13
  1576  00F83A                     __ptext13:
  1577                           	callstack 0
  1578  00F83A                     _backward:
  1579                           	callstack 27
  1580  00F83A                     
  1581                           ;Application.c: 90:     motor_reverse(&motor1);
  1582  00F83A  0E3F               	movlw	low _motor1
  1583  00F83C  6E32               	movwf	motor_reverse@motor^0,c
  1584  00F83E  0E00               	movlw	high _motor1
  1585  00F840  6E33               	movwf	(motor_reverse@motor+1)^0,c
  1586  00F842  EC6F  F07C         	call	_motor_reverse	;wreg free
  1587                           
  1588                           ;Application.c: 91:     motor_reverse(&motor2);
  1589  00F846  0E3D               	movlw	low _motor2
  1590  00F848  6E32               	movwf	motor_reverse@motor^0,c
  1591  00F84A  0E00               	movlw	high _motor2
  1592  00F84C  6E33               	movwf	(motor_reverse@motor+1)^0,c
  1593  00F84E  EC6F  F07C         	call	_motor_reverse	;wreg free
  1594  00F852  0012               	return		;funcret
  1595  00F854                     __end_of_backward:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function _motor_reverse *****************
  1599 ;; Defined at:
  1600 ;;		line 48 in file "dc_motor.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  motor           2   15[COMRAM] PTR struct .
  1603 ;;		 -> motor2(2), motor1(2), 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  ret             1    0        enum E2681
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      enum E2999
  1608 ;; Registers used:
  1609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;Total ram usage:        3 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    2
  1622 ;; This function calls:
  1623 ;;		_relay_turn_off
  1624 ;;		_relay_turn_on
  1625 ;; This function is called by:
  1626 ;;		_backward
  1627 ;;		_twist_right
  1628 ;;		_twist_left
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text14
  1633  00F8DE                     __ptext14:
  1634                           	callstack 0
  1635  00F8DE                     _motor_reverse:
  1636                           	callstack 27
  1637  00F8DE                     
  1638                           ;dc_motor.c: 50:     if(((void*)0) == motor){
  1639  00F8DE  5032               	movf	motor_reverse@motor^0,w,c
  1640  00F8E0  1033               	iorwf	(motor_reverse@motor+1)^0,w,c
  1641  00F8E2  A4D8               	btfss	status,2,c
  1642  00F8E4  EF76  F07C         	goto	u461
  1643  00F8E8  EF78  F07C         	goto	u460
  1644  00F8EC                     u461:
  1645  00F8EC  EF7A  F07C         	goto	l1231
  1646  00F8F0                     u460:
  1647  00F8F0  EF88  F07C         	goto	l208
  1648  00F8F4                     l1231:
  1649                           
  1650                           ;dc_motor.c: 53:         relay_turn_off(&(motor->relay1));
  1651  00F8F4  C032  F02E         	movff	motor_reverse@motor,relay_turn_off@relay
  1652  00F8F8  C033  F02F         	movff	motor_reverse@motor+1,relay_turn_off@relay+1
  1653  00F8FC  EC68  F07D         	call	_relay_turn_off	;wreg free
  1654                           
  1655                           ;dc_motor.c: 54:         relay_turn_on(&(motor->relay2));
  1656  00F900  0E01               	movlw	1
  1657  00F902  2432               	addwf	motor_reverse@motor^0,w,c
  1658  00F904  6E2E               	movwf	relay_turn_on@relay^0,c
  1659  00F906  0E00               	movlw	0
  1660  00F908  2033               	addwfc	(motor_reverse@motor+1)^0,w,c
  1661  00F90A  6E2F               	movwf	(relay_turn_on@relay+1)^0,c
  1662  00F90C  ECA8  F07D         	call	_relay_turn_on	;wreg free
  1663  00F910                     l208:
  1664  00F910  0012               	return		;funcret
  1665  00F912                     __end_of_motor_reverse:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _relay_turn_on *****************
  1669 ;; Defined at:
  1670 ;;		line 24 in file "relay.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  relay           2   11[COMRAM] PTR struct .
  1673 ;;		 -> motor2(2), motor1(2), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  ret             1    0        enum E2681
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      enum E2681
  1678 ;; Registers used:
  1679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        4 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    1
  1692 ;; This function calls:
  1693 ;;		_gpio_pin_write_value
  1694 ;; This function is called by:
  1695 ;;		_motor_turn_on
  1696 ;;		_motor_reverse
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text15
  1701  00FB50                     __ptext15:
  1702                           	callstack 0
  1703  00FB50                     _relay_turn_on:
  1704                           	callstack 27
  1705  00FB50                     
  1706                           ;relay.c: 26:     if((((void*)0) == relay) || (relay->port_name > 5U -1) ||
  1707  00FB50  502E               	movf	relay_turn_on@relay^0,w,c
  1708  00FB52  102F               	iorwf	(relay_turn_on@relay+1)^0,w,c
  1709  00FB54  B4D8               	btfsc	status,2,c
  1710  00FB56  EFAF  F07D         	goto	u391
  1711  00FB5A  EFB1  F07D         	goto	u390
  1712  00FB5E                     u391:
  1713  00FB5E  EFE7  F07D         	goto	l176
  1714  00FB62                     u390:
  1715  00FB62  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
  1716  00FB66  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
  1717  00FB6A  50DF               	movf	indf2,w,c
  1718  00FB6C  0B0F               	andlw	15
  1719  00FB6E  6E30               	movwf	??_relay_turn_on^0,c
  1720  00FB70  0E05               	movlw	5
  1721  00FB72  6030               	cpfslt	??_relay_turn_on^0,c
  1722  00FB74  EFBE  F07D         	goto	u401
  1723  00FB78  EFC0  F07D         	goto	u400
  1724  00FB7C                     u401:
  1725  00FB7C  EFE7  F07D         	goto	l176
  1726  00FB80                     u400:
  1727  00FB80  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
  1728  00FB84  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
  1729  00FB88  38DF               	swapf	indf2,w,c
  1730  00FB8A  0B07               	andlw	7
  1731  00FB8C  6E30               	movwf	??_relay_turn_on^0,c
  1732  00FB8E  0E07               	movlw	7
  1733  00FB90  6430               	cpfsgt	??_relay_turn_on^0,c
  1734  00FB92  EFCD  F07D         	goto	u411
  1735  00FB96  EFCF  F07D         	goto	u410
  1736  00FB9A                     u411:
  1737  00FB9A  EFD1  F07D         	goto	l1185
  1738  00FB9E                     u410:
  1739  00FB9E  EFE7  F07D         	goto	l176
  1740  00FBA2                     l1185:
  1741                           
  1742                           ;relay.c: 30:         gpio_pin_write_value(relay->port_name, relay->pin, PIN_HIGH);
  1743  00FBA2  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
  1744  00FBA6  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
  1745  00FBAA  38DF               	swapf	indf2,w,c
  1746  00FBAC  0B07               	andlw	7
  1747  00FBAE  6E23               	movwf	gpio_pin_write_value@pin^0,c
  1748  00FBB0  0E01               	movlw	1
  1749  00FBB2  6E24               	movwf	gpio_pin_write_value@pin_value^0,c
  1750  00FBB4  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
  1751  00FBB8  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
  1752  00FBBC  50DF               	movf	indf2,w,c
  1753  00FBBE  0B0F               	andlw	15
  1754  00FBC0  EC82  F07E         	call	_gpio_pin_write_value
  1755  00FBC4                     
  1756                           ;relay.c: 31:         relay->relay_status = PIN_HIGH;
  1757  00FBC4  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
  1758  00FBC8  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
  1759  00FBCC  8EDF               	bsf	indf2,7,c
  1760  00FBCE                     l176:
  1761  00FBCE  0012               	return		;funcret
  1762  00FBD0                     __end_of_relay_turn_on:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _relay_turn_off *****************
  1766 ;; Defined at:
  1767 ;;		line 36 in file "relay.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  relay           2   11[COMRAM] PTR struct .
  1770 ;;		 -> motor2(2), motor1(2), 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  ret             1    0        enum E2681
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      enum E2681
  1775 ;; Registers used:
  1776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;Total ram usage:        4 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    1
  1789 ;; This function calls:
  1790 ;;		_gpio_pin_write_value
  1791 ;; This function is called by:
  1792 ;;		_motor_turn_on
  1793 ;;		_motor_stop
  1794 ;;		_motor_reverse
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text16
  1799  00FAD0                     __ptext16:
  1800                           	callstack 0
  1801  00FAD0                     _relay_turn_off:
  1802                           	callstack 27
  1803  00FAD0                     
  1804                           ;relay.c: 38:     if((((void*)0) == relay) || (relay->port_name > 5U -1) ||
  1805  00FAD0  502E               	movf	relay_turn_off@relay^0,w,c
  1806  00FAD2  102F               	iorwf	(relay_turn_off@relay+1)^0,w,c
  1807  00FAD4  B4D8               	btfsc	status,2,c
  1808  00FAD6  EF6F  F07D         	goto	u421
  1809  00FADA  EF71  F07D         	goto	u420
  1810  00FADE                     u421:
  1811  00FADE  EFA7  F07D         	goto	l183
  1812  00FAE2                     u420:
  1813  00FAE2  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
  1814  00FAE6  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
  1815  00FAEA  50DF               	movf	indf2,w,c
  1816  00FAEC  0B0F               	andlw	15
  1817  00FAEE  6E30               	movwf	??_relay_turn_off^0,c
  1818  00FAF0  0E05               	movlw	5
  1819  00FAF2  6030               	cpfslt	??_relay_turn_off^0,c
  1820  00FAF4  EF7E  F07D         	goto	u431
  1821  00FAF8  EF80  F07D         	goto	u430
  1822  00FAFC                     u431:
  1823  00FAFC  EFA7  F07D         	goto	l183
  1824  00FB00                     u430:
  1825  00FB00  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
  1826  00FB04  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
  1827  00FB08  38DF               	swapf	indf2,w,c
  1828  00FB0A  0B07               	andlw	7
  1829  00FB0C  6E30               	movwf	??_relay_turn_off^0,c
  1830  00FB0E  0E07               	movlw	7
  1831  00FB10  6430               	cpfsgt	??_relay_turn_off^0,c
  1832  00FB12  EF8D  F07D         	goto	u441
  1833  00FB16  EF8F  F07D         	goto	u440
  1834  00FB1A                     u441:
  1835  00FB1A  EF91  F07D         	goto	l1201
  1836  00FB1E                     u440:
  1837  00FB1E  EFA7  F07D         	goto	l183
  1838  00FB22                     l1201:
  1839                           
  1840                           ;relay.c: 42:         gpio_pin_write_value(relay->port_name, relay->pin, PIN_LOW);
  1841  00FB22  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
  1842  00FB26  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
  1843  00FB2A  38DF               	swapf	indf2,w,c
  1844  00FB2C  0B07               	andlw	7
  1845  00FB2E  6E23               	movwf	gpio_pin_write_value@pin^0,c
  1846  00FB30  0E00               	movlw	0
  1847  00FB32  6E24               	movwf	gpio_pin_write_value@pin_value^0,c
  1848  00FB34  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
  1849  00FB38  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
  1850  00FB3C  50DF               	movf	indf2,w,c
  1851  00FB3E  0B0F               	andlw	15
  1852  00FB40  EC82  F07E         	call	_gpio_pin_write_value
  1853  00FB44                     
  1854                           ;relay.c: 43:         relay->relay_status = PIN_LOW;
  1855  00FB44  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
  1856  00FB48  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
  1857  00FB4C  9EDF               	bcf	indf2,7,c
  1858  00FB4E                     l183:
  1859  00FB4E  0012               	return		;funcret
  1860  00FB50                     __end_of_relay_turn_off:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _gpio_pin_write_value *****************
  1864 ;; Defined at:
  1865 ;;		line 36 in file "mcal_gpio.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  port            1    wreg     enum E2703
  1868 ;;  pin             1    0[COMRAM] enum E2693
  1869 ;;  pin_value       1    1[COMRAM] enum E2685
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  port            1   10[COMRAM] enum E2703
  1872 ;;  ret             1    0        enum E2681
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      enum E2681
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;Total ram usage:       11 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_relay_initialize
  1892 ;;		_relay_turn_on
  1893 ;;		_relay_turn_off
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text17
  1898  00FD04                     __ptext17:
  1899                           	callstack 0
  1900  00FD04                     _gpio_pin_write_value:
  1901                           	callstack 27
  1902                           
  1903                           ;incstack = 0
  1904                           ;gpio_pin_write_value@port stored from wreg
  1905  00FD04  6E2D               	movwf	gpio_pin_write_value@port^0,c
  1906  00FD06                     
  1907                           ;mcal_gpio.c: 38:     if(pin > 8U -1 || pin < 0){
  1908  00FD06  0E08               	movlw	8
  1909  00FD08  6023               	cpfslt	gpio_pin_write_value@pin^0,c
  1910  00FD0A  EF89  F07E         	goto	u331
  1911  00FD0E  EF8B  F07E         	goto	u330
  1912  00FD12                     u331:
  1913  00FD12  EFF0  F07E         	goto	l127
  1914  00FD16                     u330:
  1915  00FD16  EFDB  F07E         	goto	l1151
  1916  00FD1A                     l1145:
  1917                           
  1918                           ;mcal_gpio.c: 44:                 (*lat_register[port] &= ~(1U << pin)); break;
  1919  00FD1A  C023  F025         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1920  00FD1E  0E01               	movlw	1
  1921  00FD20  6E26               	movwf	(??_gpio_pin_write_value+1)^0,c
  1922  00FD22  0E00               	movlw	0
  1923  00FD24  6E27               	movwf	(??_gpio_pin_write_value+2)^0,c
  1924  00FD26  2A25               	incf	??_gpio_pin_write_value^0,f,c
  1925  00FD28  EF99  F07E         	goto	u344
  1926  00FD2C                     u345:
  1927  00FD2C  90D8               	bcf	status,0,c
  1928  00FD2E  3626               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1929  00FD30  3627               	rlcf	(??_gpio_pin_write_value+2)^0,f,c
  1930  00FD32                     u344:
  1931  00FD32  2E25               	decfsz	??_gpio_pin_write_value^0,f,c
  1932  00FD34  EF96  F07E         	goto	u345
  1933  00FD38  1C26               	comf	(??_gpio_pin_write_value+1)^0,w,c
  1934  00FD3A  6E28               	movwf	(??_gpio_pin_write_value+3)^0,c
  1935  00FD3C  1C27               	comf	(??_gpio_pin_write_value+2)^0,w,c
  1936  00FD3E  6E29               	movwf	(??_gpio_pin_write_value+4)^0,c
  1937  00FD40  502D               	movf	gpio_pin_write_value@port^0,w,c
  1938  00FD42  0D02               	mullw	2
  1939  00FD44  0E0B               	movlw	low _lat_register
  1940  00FD46  24F3               	addwf	243,w,c
  1941  00FD48  6ED9               	movwf	fsr2l,c
  1942  00FD4A  0E00               	movlw	high _lat_register
  1943  00FD4C  20F4               	addwfc	prodh,w,c
  1944  00FD4E  6EDA               	movwf	fsr2h,c
  1945  00FD50  CFDE F02A          	movff	postinc2,??_gpio_pin_write_value+5
  1946  00FD54  CFDD F02B          	movff	postdec2,??_gpio_pin_write_value+6
  1947  00FD58  C02A  FFD9         	movff	??_gpio_pin_write_value+5,fsr2l
  1948  00FD5C  C02B  FFDA         	movff	??_gpio_pin_write_value+6,fsr2h
  1949  00FD60  5028               	movf	(??_gpio_pin_write_value+3)^0,w,c
  1950  00FD62  16DE               	andwf	postinc2,f,c
  1951  00FD64  5029               	movf	(??_gpio_pin_write_value+4)^0,w,c
  1952  00FD66  16DD               	andwf	postdec2,f,c
  1953  00FD68  EFF0  F07E         	goto	l127
  1954  00FD6C                     l1147:
  1955                           
  1956                           ;mcal_gpio.c: 47:                 (*lat_register[port] |= (1U << pin)); break;
  1957  00FD6C  C023  F025         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1958  00FD70  0E01               	movlw	1
  1959  00FD72  6E26               	movwf	(??_gpio_pin_write_value+1)^0,c
  1960  00FD74  0E00               	movlw	0
  1961  00FD76  6E27               	movwf	(??_gpio_pin_write_value+2)^0,c
  1962  00FD78  2A25               	incf	??_gpio_pin_write_value^0,f,c
  1963  00FD7A  EFC2  F07E         	goto	u354
  1964  00FD7E                     u355:
  1965  00FD7E  90D8               	bcf	status,0,c
  1966  00FD80  3626               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1967  00FD82  3627               	rlcf	(??_gpio_pin_write_value+2)^0,f,c
  1968  00FD84                     u354:
  1969  00FD84  2E25               	decfsz	??_gpio_pin_write_value^0,f,c
  1970  00FD86  EFBF  F07E         	goto	u355
  1971  00FD8A  502D               	movf	gpio_pin_write_value@port^0,w,c
  1972  00FD8C  0D02               	mullw	2
  1973  00FD8E  0E0B               	movlw	low _lat_register
  1974  00FD90  24F3               	addwf	243,w,c
  1975  00FD92  6ED9               	movwf	fsr2l,c
  1976  00FD94  0E00               	movlw	high _lat_register
  1977  00FD96  20F4               	addwfc	prodh,w,c
  1978  00FD98  6EDA               	movwf	fsr2h,c
  1979  00FD9A  CFDE F028          	movff	postinc2,??_gpio_pin_write_value+3
  1980  00FD9E  CFDD F029          	movff	postdec2,??_gpio_pin_write_value+4
  1981  00FDA2  C028  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  1982  00FDA6  C029  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  1983  00FDAA  5026               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1984  00FDAC  12DE               	iorwf	postinc2,f,c
  1985  00FDAE  5027               	movf	(??_gpio_pin_write_value+2)^0,w,c
  1986  00FDB0  12DD               	iorwf	postdec2,f,c
  1987  00FDB2  EFF0  F07E         	goto	l127
  1988  00FDB6                     l1151:
  1989  00FDB6  5024               	movf	gpio_pin_write_value@pin_value^0,w,c
  1990  00FDB8  6E25               	movwf	??_gpio_pin_write_value^0,c
  1991  00FDBA  6A26               	clrf	(??_gpio_pin_write_value+1)^0,c
  1992                           
  1993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1994                           ; Switch size 1, requested type "simple"
  1995                           ; Number of cases is 1, Range of values is 0 to 0
  1996                           ; switch strategies available:
  1997                           ; Name         Instructions Cycles
  1998                           ; simple_byte            4     3 (average)
  1999                           ;	Chosen strategy is simple_byte
  2000  00FDBC  5026               	movf	(??_gpio_pin_write_value+1)^0,w,c
  2001  00FDBE  0A00               	xorlw	0	; case 0
  2002  00FDC0  B4D8               	btfsc	status,2,c
  2003  00FDC2  EFE5  F07E         	goto	l1391
  2004  00FDC6  EFF0  F07E         	goto	l127
  2005  00FDCA                     l1391:
  2006                           
  2007                           ; Switch size 1, requested type "simple"
  2008                           ; Number of cases is 2, Range of values is 0 to 1
  2009                           ; switch strategies available:
  2010                           ; Name         Instructions Cycles
  2011                           ; simple_byte            7     4 (average)
  2012                           ;	Chosen strategy is simple_byte
  2013  00FDCA  5025               	movf	??_gpio_pin_write_value^0,w,c
  2014  00FDCC  0A00               	xorlw	0	; case 0
  2015  00FDCE  B4D8               	btfsc	status,2,c
  2016  00FDD0  EF8D  F07E         	goto	l1145
  2017  00FDD4  0A01               	xorlw	1	; case 1
  2018  00FDD6  B4D8               	btfsc	status,2,c
  2019  00FDD8  EFB6  F07E         	goto	l1147
  2020  00FDDC  EFF0  F07E         	goto	l127
  2021  00FDE0                     l127:
  2022  00FDE0  0012               	return		;funcret
  2023  00FDE2                     __end_of_gpio_pin_write_value:
  2024                           	callstack 0
  2025  0000                     
  2026                           	psect	rparam
  2027  0000                     
  2028                           	psect	idloc
  2029                           
  2030                           ;Config register IDLOC0 @ 0x200000
  2031                           ;	unspecified, using default values
  2032  200000                     	org	2097152
  2033  200000  FF                 	db	255
  2034                           
  2035                           ;Config register IDLOC1 @ 0x200001
  2036                           ;	unspecified, using default values
  2037  200001                     	org	2097153
  2038  200001  FF                 	db	255
  2039                           
  2040                           ;Config register IDLOC2 @ 0x200002
  2041                           ;	unspecified, using default values
  2042  200002                     	org	2097154
  2043  200002  FF                 	db	255
  2044                           
  2045                           ;Config register IDLOC3 @ 0x200003
  2046                           ;	unspecified, using default values
  2047  200003                     	org	2097155
  2048  200003  FF                 	db	255
  2049                           
  2050                           ;Config register IDLOC4 @ 0x200004
  2051                           ;	unspecified, using default values
  2052  200004                     	org	2097156
  2053  200004  FF                 	db	255
  2054                           
  2055                           ;Config register IDLOC5 @ 0x200005
  2056                           ;	unspecified, using default values
  2057  200005                     	org	2097157
  2058  200005  FF                 	db	255
  2059                           
  2060                           ;Config register IDLOC6 @ 0x200006
  2061                           ;	unspecified, using default values
  2062  200006                     	org	2097158
  2063  200006  FF                 	db	255
  2064                           
  2065                           ;Config register IDLOC7 @ 0x200007
  2066                           ;	unspecified, using default values
  2067  200007                     	org	2097159
  2068  200007  FF                 	db	255
  2069                           
  2070                           	psect	config
  2071                           
  2072                           ; Padding undefined space
  2073  300000                     	org	3145728
  2074  300000  FF                 	db	255
  2075                           
  2076                           ;Config register CONFIG1H @ 0x300001
  2077                           ;	unspecified, using default values
  2078                           ;	Oscillator Selection bits
  2079                           ;	FOSC = 0x7, unprogrammed default
  2080                           ;	Fail-Safe Clock Monitor Enable bit
  2081                           ;	FCMEN = 0x0, unprogrammed default
  2082                           ;	Internal/External Oscillator Switchover bit
  2083                           ;	IESO = 0x0, unprogrammed default
  2084  300001                     	org	3145729
  2085  300001  07                 	db	7
  2086                           
  2087                           ;Config register CONFIG2L @ 0x300002
  2088                           ;	unspecified, using default values
  2089                           ;	Power-up Timer Enable bit
  2090                           ;	PWRT = 0x1, unprogrammed default
  2091                           ;	Brown-out Reset Enable bits
  2092                           ;	BOREN = 0x3, unprogrammed default
  2093                           ;	Brown Out Reset Voltage bits
  2094                           ;	BORV = 0x3, unprogrammed default
  2095  300002                     	org	3145730
  2096  300002  1F                 	db	31
  2097                           
  2098                           ;Config register CONFIG2H @ 0x300003
  2099                           ;	unspecified, using default values
  2100                           ;	Watchdog Timer Enable bit
  2101                           ;	WDTEN = 0x1, unprogrammed default
  2102                           ;	Watchdog Timer Postscale Select bits
  2103                           ;	WDTPS = 0xF, unprogrammed default
  2104  300003                     	org	3145731
  2105  300003  1F                 	db	31
  2106                           
  2107                           ; Padding undefined space
  2108  300004                     	org	3145732
  2109  300004  FF                 	db	255
  2110                           
  2111                           ;Config register CONFIG3H @ 0x300005
  2112                           ;	unspecified, using default values
  2113                           ;	CCP2 MUX bit
  2114                           ;	CCP2MX = 0x1, unprogrammed default
  2115                           ;	PORTB A/D Enable bit
  2116                           ;	PBADEN = 0x1, unprogrammed default
  2117                           ;	Low-Power Timer1 Oscillator Enable bit
  2118                           ;	LPT1OSC = 0x0, unprogrammed default
  2119                           ;	HFINTOSC Fast Start-up
  2120                           ;	HFOFST = 0x1, unprogrammed default
  2121                           ;	MCLR Pin Enable bit
  2122                           ;	MCLRE = 0x1, unprogrammed default
  2123  300005                     	org	3145733
  2124  300005  8B                 	db	139
  2125                           
  2126                           ;Config register CONFIG4L @ 0x300006
  2127                           ;	unspecified, using default values
  2128                           ;	Stack Full/Underflow Reset Enable bit
  2129                           ;	STVREN = 0x1, unprogrammed default
  2130                           ;	Single-Supply ICSP Enable bit
  2131                           ;	LVP = 0x1, unprogrammed default
  2132                           ;	Extended Instruction Set Enable bit
  2133                           ;	XINST = 0x0, unprogrammed default
  2134                           ;	Background Debugger Enable bit
  2135                           ;	DEBUG = 0x1, unprogrammed default
  2136  300006                     	org	3145734
  2137  300006  85                 	db	133
  2138                           
  2139                           ; Padding undefined space
  2140  300007                     	org	3145735
  2141  300007  FF                 	db	255
  2142                           
  2143                           ;Config register CONFIG5L @ 0x300008
  2144                           ;	unspecified, using default values
  2145                           ;	Code Protection Block 0
  2146                           ;	CP0 = 0x1, unprogrammed default
  2147                           ;	Code Protection Block 1
  2148                           ;	CP1 = 0x1, unprogrammed default
  2149                           ;	Code Protection Block 2
  2150                           ;	CP2 = 0x1, unprogrammed default
  2151                           ;	Code Protection Block 3
  2152                           ;	CP3 = 0x1, unprogrammed default
  2153  300008                     	org	3145736
  2154  300008  0F                 	db	15
  2155                           
  2156                           ;Config register CONFIG5H @ 0x300009
  2157                           ;	unspecified, using default values
  2158                           ;	Boot Block Code Protection bit
  2159                           ;	CPB = 0x1, unprogrammed default
  2160                           ;	Data EEPROM Code Protection bit
  2161                           ;	CPD = 0x1, unprogrammed default
  2162  300009                     	org	3145737
  2163  300009  C0                 	db	192
  2164                           
  2165                           ;Config register CONFIG6L @ 0x30000A
  2166                           ;	unspecified, using default values
  2167                           ;	Write Protection Block 0
  2168                           ;	WRT0 = 0x1, unprogrammed default
  2169                           ;	Write Protection Block 1
  2170                           ;	WRT1 = 0x1, unprogrammed default
  2171                           ;	Write Protection Block 2
  2172                           ;	WRT2 = 0x1, unprogrammed default
  2173                           ;	Write Protection Block 3
  2174                           ;	WRT3 = 0x1, unprogrammed default
  2175  30000A                     	org	3145738
  2176  30000A  0F                 	db	15
  2177                           
  2178                           ;Config register CONFIG6H @ 0x30000B
  2179                           ;	unspecified, using default values
  2180                           ;	Configuration Register Write Protection bit
  2181                           ;	WRTC = 0x1, unprogrammed default
  2182                           ;	Boot Block Write Protection bit
  2183                           ;	WRTB = 0x1, unprogrammed default
  2184                           ;	Data EEPROM Write Protection bit
  2185                           ;	WRTD = 0x1, unprogrammed default
  2186  30000B                     	org	3145739
  2187  30000B  E0                 	db	224
  2188                           
  2189                           ;Config register CONFIG7L @ 0x30000C
  2190                           ;	unspecified, using default values
  2191                           ;	Table Read Protection Block 0
  2192                           ;	EBTR0 = 0x1, unprogrammed default
  2193                           ;	Table Read Protection Block 1
  2194                           ;	EBTR1 = 0x1, unprogrammed default
  2195                           ;	Table Read Protection Block 2
  2196                           ;	EBTR2 = 0x1, unprogrammed default
  2197                           ;	Table Read Protection Block 3
  2198                           ;	EBTR3 = 0x1, unprogrammed default
  2199  30000C                     	org	3145740
  2200  30000C  0F                 	db	15
  2201                           
  2202                           ;Config register CONFIG7H @ 0x30000D
  2203                           ;	unspecified, using default values
  2204                           ;	Boot Block Table Read Protection bit
  2205                           ;	EBTRB = 0x1, unprogrammed default
  2206  30000D                     	org	3145741
  2207  30000D  40                 	db	64
  2208                           tosu	equ	0xFFF
  2209                           tosh	equ	0xFFE
  2210                           tosl	equ	0xFFD
  2211                           stkptr	equ	0xFFC
  2212                           pclatu	equ	0xFFB
  2213                           pclath	equ	0xFFA
  2214                           pcl	equ	0xFF9
  2215                           tblptru	equ	0xFF8
  2216                           tblptrh	equ	0xFF7
  2217                           tblptrl	equ	0xFF6
  2218                           tablat	equ	0xFF5
  2219                           prodh	equ	0xFF4
  2220                           prodl	equ	0xFF3
  2221                           indf0	equ	0xFEF
  2222                           postinc0	equ	0xFEE
  2223                           postdec0	equ	0xFED
  2224                           preinc0	equ	0xFEC
  2225                           plusw0	equ	0xFEB
  2226                           fsr0h	equ	0xFEA
  2227                           fsr0l	equ	0xFE9
  2228                           wreg	equ	0xFE8
  2229                           indf1	equ	0xFE7
  2230                           postinc1	equ	0xFE6
  2231                           postdec1	equ	0xFE5
  2232                           preinc1	equ	0xFE4
  2233                           plusw1	equ	0xFE3
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           bsr	equ	0xFE0
  2237                           indf2	equ	0xFDF
  2238                           postinc2	equ	0xFDE
  2239                           postdec2	equ	0xFDD
  2240                           preinc2	equ	0xFDC
  2241                           plusw2	equ	0xFDB
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     18      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    motor_reverse@motor	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    motor_stop@motor	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    motor_turn_on@motor	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    motor_initialize@motor	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    relay_turn_off@relay	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    relay_turn_on@relay	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    relay_initialize@relay	PTR struct . size(2) Largest target is 2
		 -> motor2(COMRAM[2]), motor1(COMRAM[2]), 

    btn_read_value@status	PTR enum E2727 size(2) Largest target is 2
		 -> l_status(COMRAM[2]), r_status(COMRAM[2]), b_status(COMRAM[2]), f_status(COMRAM[2]), 

    btn_read_value@button	PTR struct . size(2) Largest target is 1
		 -> btn_left(COMRAM[1]), btn_right(COMRAM[1]), btn_backward(COMRAM[1]), btn_forward(COMRAM[1]), 

    btn_config@button	PTR struct . size(2) Largest target is 1
		 -> btn_left(COMRAM[1]), btn_right(COMRAM[1]), btn_backward(COMRAM[1]), btn_forward(COMRAM[1]), 

    gpio_pin_read_value@logic	PTR enum E2685 size(2) Largest target is 2
		 -> l_status(COMRAM[2]), r_status(COMRAM[2]), b_status(COMRAM[2]), f_status(COMRAM[2]), 

    port_register	PTR volatile unsigned int [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned int [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned int [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_motor_initialize
    _twist_right->_motor_reverse
    _twist_right->_motor_turn_on
    _twist_left->_motor_reverse
    _twist_left->_motor_turn_on
    _stop->_motor_stop
    _motor_stop->_relay_turn_off
    _motor_initialize->_relay_initialize
    _relay_initialize->_gpio_pin_direction_intialize
    _relay_initialize->_gpio_pin_write_value
    _forward->_motor_turn_on
    _motor_turn_on->_relay_turn_off
    _motor_turn_on->_relay_turn_on
    _btn_read_value->_gpio_pin_read_value
    _btn_config->_gpio_pin_direction_intialize
    _backward->_motor_reverse
    _motor_reverse->_relay_turn_off
    _motor_reverse->_relay_turn_on
    _relay_turn_on->_gpio_pin_write_value
    _relay_turn_off->_gpio_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18762
                           _backward
                         _btn_config
                     _btn_read_value
                            _forward
                   _motor_initialize
                               _stop
                         _twist_left
                        _twist_right
 ---------------------------------------------------------------------------------
 (1) _twist_right                                          0     0      0    4644
                      _motor_reverse
                      _motor_turn_on
 ---------------------------------------------------------------------------------
 (1) _twist_left                                           0     0      0    4644
                      _motor_reverse
                      _motor_turn_on
 ---------------------------------------------------------------------------------
 (1) _stop                                                 0     0      0    1277
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           3     1      2    1277
                                             15 COMRAM     3     1      2
                     _relay_turn_off
 ---------------------------------------------------------------------------------
 (1) _motor_initialize                                     3     1      2    1602
                                             15 COMRAM     3     1      2
                   _relay_initialize
 ---------------------------------------------------------------------------------
 (2) _relay_initialize                                     4     2      2    1370
                                             11 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0    2322
                      _motor_turn_on
 ---------------------------------------------------------------------------------
 (2) _motor_turn_on                                        3     1      2    2322
                                             15 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (1) _btn_read_value                                       6     2      4    1074
                                             10 COMRAM     6     2      4
                _gpio_pin_read_value
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_value                                 10     7      3     276
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _btn_config                                           4     2      2     877
                                             11 COMRAM     4     2      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                        11     9      2     449
                                              0 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (1) _backward                                             0     0      0    2322
                      _motor_reverse
 ---------------------------------------------------------------------------------
 (2) _motor_reverse                                        3     1      2    2322
                                             15 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (3) _relay_turn_on                                        4     2      2     893
                                             11 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (3) _relay_turn_off                                       4     2      2    1045
                                             11 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_value                                11     9      2     601
                                              0 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _backward
     _motor_reverse
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _btn_config
     _gpio_pin_direction_intialize
   _btn_read_value
     _gpio_pin_read_value
   _forward
     _motor_turn_on
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _motor_initialize
     _relay_initialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_value
   _stop
     _motor_stop
       _relay_turn_off
         _gpio_pin_write_value
   _twist_left
     _motor_reverse
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
     _motor_turn_on
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _twist_right
     _motor_reverse
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
     _motor_turn_on
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     12      40       1       67.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      32        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Nov 04 15:57:13 2020

                                   l50 FFC8                                     l52 FFDE  
                                   l61 F86C                                     l70 F8BA  
                                   l64 F852                                     l48 FFB2  
                                   l73 F8A0                                     l67 F886  
                      ??_motor_reverse 0034                __size_of_relay_turn_off 0080  
                      ??_motor_turn_on 0034                                    l115 FEBE  
                                  l203 F9AC                                    l150 FA58  
                                  l127 FDE0                                    l208 F910  
                                  l139 FACE                                    l157 FD02  
                                  l183 FB4E                                    l176 FBCE  
                                  l168 FC66                                    l193 F978  
                                  l198 F944                                    u400 FB80  
                                  u401 FB7C                                    u330 FD16  
                                  u410 FB9E                                    u331 FD12  
                                  u411 FB9A                                    u420 FAE2  
                                  u421 FADE                                    u430 FB00  
                                  u510 FBE2                                    u431 FAFC  
                                  u511 FBDE                                    u344 FD32  
                                  u440 FB1E                                    u360 FDF4  
                                  u504 FABA                                    u600 FCB6  
                                  u520 FC00                                    u345 FD2C  
                                  u441 FB1A                                    u361 FDF0  
                                  u505 FAB4                                    u601 FCB2  
                                  u521 FBFC                                    u354 FD84  
                                  u450 F924                                    u530 FC1E  
                                  u610 FFAA                                    u355 FD7E  
                                  u451 F920                                    u531 FC1A  
                                  u611 FFA6                                    u460 F8F0  
                                  u540 F958                                    u620 FFC0  
                                  u461 F8EC                                    u541 F954  
                                  u621 FFBC                                    u390 FB62  
                                  u374 FE10                                    u550 F9F6  
                                  u470 F98C                                    u630 FFD6  
                                  u391 FB5E                                    u375 FE0A  
                                  u551 F9F2                                    u471 F988  
                                  u631 FFD2                                    u384 FE62  
                                  u560 FA14                                    u480 FA6C  
                                  u640 FFEC                                    u385 FE5C  
                                  u561 FA10                                    u481 FA68  
                                  u641 FFE8                                    u570 FA32  
                                  u490 FA7E                                    u571 FA2E  
                                  u491 FA7A                                    u580 FC7A  
                                  u581 FC76                                    u590 FC98  
                                  u591 FC94                                    prod 000FF3  
                                  wreg 000FE8                      ?_motor_initialize 0032  
                   ??_motor_initialize 0034                                   l1201 FB22  
                                 l1203 FB44                                   l1211 F912  
                                 l1205 FB4E                                   l1301 FA14  
                                 l1151 FDB6                                   l1231 F8F4  
                                 l1223 F8DE                                   l1311 FC68  
                                 l1145 FD1A                                   l1137 FD06  
                                 l1233 F910                                   l1225 F8DE  
                                 l1305 FA36                                   l1321 FCBA  
                                 l1313 FC68                                   l1217 F928  
                                 l1209 F912                                   l1147 FD6C  
                                 l1139 FD06                                   l1331 F83A  
                                 l1171 FE94                                   l1307 FA58  
                                 l1251 FA5C                                   l1323 FCE0  
                                 l1315 FC7A                                   l1219 F944  
                                 l1181 FB62                                   l1165 FDF8  
                                 l1157 FDE4                                   l1261 FACE  
                                 l1253 FA5C                                   l1325 FD02  
                                 l1317 FC98                                   l1245 F990  
                                 l1237 F97A                                   l1333 F8A2  
                                 l1341 FECC                                   l1183 FB80  
                                 l1167 FE4A                                   l1159 FDE4  
                                 l1255 FA6C                                   l1271 FC00  
                                 l1247 F9AC                                   l1239 F97A  
                                 l1335 F888                                   l1351 FF10  
                                 l1343 FEDE                                   l1193 FAD0  
                                 l1185 FBA2                                   l1177 FB50  
                                 l1329 F854                                   l1265 FBD0  
                                 l1281 F946                                   l1337 F86E  
                                 l1361 FF4C                                   l1353 FF1C  
                                 l1345 FEF0                                   l1195 FAD0  
                                 l1187 FBC4                                   l1179 FB50  
                                 l1259 FA82                                   l1275 FC22  
                                 l1267 FBD0                                   l1291 F978  
                                 l1283 F946                                   l1371 FFAA  
                                 l1363 FF60                                   l1355 FF28  
                                 l1347 FF02                                   l1339 FEC0  
                                 l1197 FAE2                                   l1189 FBCE  
                                 l1277 FC66                                   l1269 FBE2  
                                 l1373 FFC0                                   l1365 FF74  
                                 l1357 FF34                                   l1349 FF04  
                                 l1391 FDCA                                   l1199 FB00  
                                 l1295 F9E4                                   l1375 FFD6  
                                 l1367 FF88                                   l1359 FF40  
                                 l1297 F9E4                                   l1289 F95C  
                                 l1377 FFEC                                   l1369 FF9C  
                                 l1299 F9F6                                   l1379 FFF4  
                                 l1389 FEA8                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _main FEC0                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                relay_initialize@relay 002E                                   fsr2l 000FD9  
                                 _stop F86E                 __end_of_btn_read_value FD04  
                                 prodl 000FF3                                   start 0000  
                         ___param_bank 000000                   _gpio_pin_write_value FD04  
                                ?_main 0023                                  ?_stop 0023  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTC 000F82                                  _PORTD 000F83  
                                _PORTE 000F84                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                          _twist_right F8A2                        __end_of_forward F86E  
                                tablat 000FF5                    relay_turn_off@relay 002E  
                                status 000FD8                        ?_btn_read_value 002D  
gpio_pin_direction_intialize@direction 0024                        __initialization F9AE  
                __end_of_relay_turn_on FBD0                           __end_of_main 0000  
                         __end_of_stop F888                  ?_gpio_pin_write_value 0023  
                               ??_main 0035                                 ??_stop 0035  
                        __activetblptr 000002           __size_of_gpio_pin_read_value 0076  
                     __end_of_backward F854                          _tris_register 0015  
                               clear_0 F9D4                         _relay_turn_off FAD0  
                               _motor1 003F                                 _motor2 003D  
                         __pdataCOMRAM 0001                              ??_forward 0035  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                      ?_relay_initialize 002E  
                   ??_relay_initialize 0030               gpio_pin_read_value@logic 0024  
                           __accesstop 0060                __end_of__initialization F9DA  
                        ___rparam_used 000001                         __pcstackCOMRAM 0023  
               ??_gpio_pin_write_value 0025                 __end_of_relay_turn_off FB50  
                   motor_reverse@motor 0032              __size_of_motor_initialize 0034  
                      ?_relay_turn_off 002E                  __end_of_motor_reverse F912  
                            ?_backward 0023                  __end_of_motor_turn_on F946  
                         ?_twist_right 0023                             _btn_config F9E4  
                     ??_btn_read_value 0031                                __Hparam 0000  
                              __Lparam 0000                    _gpio_pin_read_value FA5A  
                              __pcinit F9AE                                __ramtop 1000  
                              __ptext0 FEC0                                __ptext1 F8A2  
                              __ptext2 F888                                __ptext3 F86E  
                              __ptext4 F97A                                __ptext5 F946  
                              __ptext6 FBD0                                __ptext7 F854  
                              __ptext8 F912                                __ptext9 FC68  
                           ??_backward 0035          gpio_pin_write_value@pin_value 0024  
                              _forward F854                   ?_gpio_pin_read_value 0023  
                 end_of_initialization F9DA                          __Lmediumconst 0000  
                         _btn_backward 0021                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             _motor_stop F97A  
 __end_of_gpio_pin_direction_intialize FEC0  __size_of_gpio_pin_direction_intialize 00DE  
         _gpio_pin_direction_intialize FDE2                   btn_read_value@button 002D  
                ??_gpio_pin_read_value 0026                            ?_btn_config 002E  
                 btn_read_value@status 002F                 __size_of_relay_turn_on 0080  
                     _motor_initialize F946              __size_of_relay_initialize 0098  
                        __pidataCOMRAM F8BC                             _twist_left F888  
                   relay_turn_on@relay 002E                    start_initialization F9AE  
        ?_gpio_pin_direction_intialize 0023                           _lat_register 000B  
                 __size_of_twist_right 001A                       ??_relay_turn_off 0030  
             gpio_pin_write_value@port 002D                          _relay_turn_on FB50  
                  __size_of_btn_config 0076          __size_of_gpio_pin_write_value 00DE  
                          ?_motor_stop 0032                gpio_pin_read_value@port 002C  
                          __pbssCOMRAM 0035                      __size_of_backward 001A  
      gpio_pin_direction_intialize@pin 0023                         ?_relay_turn_on 002E  
                          ?_twist_left 0023                              _btn_right 0020  
                     btn_config@button 002E                               ?_forward 0023  
                      motor_stop@motor 0032                    __size_of_motor_stop 0034  
       ??_gpio_pin_direction_intialize 0025                 __size_of_motor_reverse 0034  
                     _relay_initialize FBD0                 __size_of_motor_turn_on 0034  
                          _btn_forward 0022               __end_of_motor_initialize F97A  
                         ??_btn_config 0030                              copy_data0 F9C2  
                  __size_of_twist_left 001A                               __Hrparam 0000  
                      ??_relay_turn_on 0030                gpio_pin_write_value@pin 0023  
                             __Lrparam 0000                __size_of_btn_read_value 009C  
               gpio_pin_read_value@pin 0023                     __end_of_btn_config FA5A  
                             _backward F83A            __end_of_gpio_pin_read_value FAD0  
                        _motor_reverse F8DE                               _b_status 0039  
                     __size_of_forward 001A                          _motor_turn_on F912  
                             __ptext10 FA5A                               __ptext11 F9E4  
                             __ptext12 FDE2                               __ptext13 F83A  
                             __ptext14 F8DE                               __ptext15 FB50  
                             __ptext16 FAD0                               __ptext17 FD04  
                             _f_status 003B                               _btn_left 001F  
                             _l_status 0035                          __size_of_main 0140  
                        __size_of_stop 001A                               _r_status 0037  
                         ??_motor_stop 0034                         ?_motor_reverse 0032  
                motor_initialize@motor 0032                         ?_motor_turn_on 0032  
     gpio_pin_direction_intialize@port 002D                          ??_twist_right 0035  
         __end_of_gpio_pin_write_value FDE2                     motor_turn_on@motor 0032  
                   __end_of_motor_stop F9AE                           ??_twist_left 0035  
             __end_of_relay_initialize FC68                          _port_register 0001  
                  __end_of_twist_right F8BC                     __end_of_twist_left F8A2  
                       _btn_read_value FC68  
